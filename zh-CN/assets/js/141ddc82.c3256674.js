(self.webpackChunkalaya_docs=self.webpackChunkalaya_docs||[]).push([[4701],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return k},kt:function(){return d}});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var m=n.createContext({}),o=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},k=function(e){var t=o(e.components);return n.createElement(m.Provider,{value:t},e.children)},N={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,m=e.parentName,k=i(e,["components","mdxType","originalType","parentName"]),s=o(a),d=l,u=s["".concat(m,".").concat(d)]||s[d]||N[d]||r;return a?n.createElement(u,p(p({ref:t},k),{},{components:a})):n.createElement(u,p({ref:t},k))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,p=new Array(r);p[0]=s;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:l,p[1]=i;for(var o=2;o<r;o++)p[o]=a[o];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},5316:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return o},default:function(){return N}});var n=a(2122),l=a(9756),r=(a(7294),a(3905)),p={id:"WASM_Smart_Contract",title:"WASM\u667a\u80fd\u5408\u7ea6",sidebar_label:"WASM\u667a\u80fd\u5408\u7ea6"},i=void 0,m={unversionedId:"WASM_Smart_Contract",id:"WASM_Smart_Contract",isDocsHomePage:!1,title:"WASM\u667a\u80fd\u5408\u7ea6",description:"Alaya \u533a\u5757\u94fe\u652f\u6301\u4f7f\u7528 WebAssembly (WASM)\u6765\u6267\u884c\u7528\u6237\u7f16\u5199\u7684\u667a\u80fd\u5408\u7ea6\uff0cWASM \u662f\u4e00\u79cd\u4e3a\u6808\u5f0f\u865a\u62df\u673a\u8bbe\u8ba1\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\u96c6\u3002WASM \u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4f9b\u7c7b\u4f3c C/C++/Rust \u7b49\u9ad8\u7ea7\u8bed\u8a00\u7684\u5e73\u53f0\u7f16\u8bd1\u76ee\u6807\uff0c\u6700\u521d\u8bbe\u8ba1\u76ee\u7684\u662f\u89e3\u51b3 JavaScript \u7684\u6027\u80fd\u95ee\u9898\u3002WASM \u662f\u7531 W3C \u7275\u5934\u6b63\u5728\u63a8\u8fdb\u7684 Web \u6807\u51c6\uff0c\u5e76\u5f97\u5230\u4e86\u8c37\u6b4c\u3001\u5fae\u8f6f\u548c Mozilla \u7b49\u6d4f\u89c8\u5668\u5382\u5546\u7684\u652f\u6301\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/WASM_Smart_Contract.md",sourceDirName:".",slug:"/WASM_Smart_Contract",permalink:"/alaya-devdocs/zh-CN/WASM_Smart_Contract",editUrl:"https://github.com/AlayaNetwork/alaya-devdocs/tree/main/website/i18n/zh-CN/docusaurus-plugin-content-docs/current/WASM_Smart_Contract.md",version:"current",frontMatter:{id:"WASM_Smart_Contract",title:"WASM\u667a\u80fd\u5408\u7ea6",sidebar_label:"WASM\u667a\u80fd\u5408\u7ea6"}},o=[{value:"\u5165\u95e8",id:"\u5165\u95e8",children:[{value:"\u6982\u8981",id:"\u6982\u8981",children:[]},{value:"alaya-truffle \u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd",id:"alaya-truffle-\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd",children:[]},{value:"\u521b\u5efa HelloWorld \u5408\u7ea6",id:"\u521b\u5efa-helloworld-\u5408\u7ea6",children:[]},{value:"\u7f16\u8bd1 HelloWorld \u5408\u7ea6",id:"\u7f16\u8bd1-helloworld-\u5408\u7ea6",children:[]},{value:"\u90e8\u7f72 HelloWorld \u5408\u7ea6",id:"\u90e8\u7f72-helloworld-\u5408\u7ea6",children:[]},{value:"\u8c03\u7528 HelloWorld \u5408\u7ea6",id:"\u8c03\u7528-helloworld-\u5408\u7ea6",children:[]}]},{value:"\u5408\u7ea6\u5f00\u53d1\u6210\u672c",id:"\u5408\u7ea6\u5f00\u53d1\u6210\u672c",children:[{value:"\u6982\u8981",id:"\u6982\u8981-1",children:[]},{value:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b",children:[]},{value:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b",children:[]},{value:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b",id:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b",children:[]}]},{value:"\u6700\u4f73\u5b9e\u8df5",id:"\u6700\u4f73\u5b9e\u8df5",children:[{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",children:[]},{value:"\u8d39\u7528\u5408\u7406\u8bbe\u7f6e",id:"\u8d39\u7528\u5408\u7406\u8bbe\u7f6e",children:[]},{value:"\u907f\u514d\u8d85\u65f6",id:"\u907f\u514d\u8d85\u65f6",children:[]},{value:"\u975e\u6cd5\u64cd\u4f5c\u5904\u7f5a",id:"\u975e\u6cd5\u64cd\u4f5c\u5904\u7f5a",children:[]},{value:"C/C++\u8bed\u8a00\u9650\u5236",id:"cc\u8bed\u8a00\u9650\u5236",children:[]},{value:"\u7f16\u7a0b\u89c4\u8303",id:"\u7f16\u7a0b\u89c4\u8303",children:[]}]},{value:"API",id:"api",children:[{value:"\u533a\u5757 Api",id:"\u533a\u5757-api",children:[]},{value:"\u4ea4\u6613 API",id:"\u4ea4\u6613-api",children:[]},{value:"\u5e10\u6237 Api",id:"\u5e10\u6237-api",children:[]},{value:"\u5b58\u50a8 API",id:"\u5b58\u50a8-api",children:[]},{value:"\u5408\u7ea6 API",id:"\u5408\u7ea6-api",children:[]},{value:"\u5f02\u5e38 API",id:"\u5f02\u5e38-api",children:[]},{value:"\u5176\u4ed6 API",id:"\u5176\u4ed6-api",children:[]}]},{value:"FAQ",id:"faq",children:[{value:"\u7f16\u8bd1\u76f8\u5173",id:"\u7f16\u8bd1\u76f8\u5173",children:[]},{value:"\u5408\u7ea6\u76f8\u5173",id:"\u5408\u7ea6\u76f8\u5173",children:[]}]}],k={toc:o};function N(e){var t=e.components,a=(0,l.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Alaya \u533a\u5757\u94fe\u652f\u6301\u4f7f\u7528 WebAssembly (WASM)\u6765\u6267\u884c\u7528\u6237\u7f16\u5199\u7684\u667a\u80fd\u5408\u7ea6\uff0cWASM \u662f\u4e00\u79cd\u4e3a\u6808\u5f0f\u865a\u62df\u673a\u8bbe\u8ba1\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\u96c6\u3002WASM \u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4f9b\u7c7b\u4f3c C/C++/Rust \u7b49\u9ad8\u7ea7\u8bed\u8a00\u7684\u5e73\u53f0\u7f16\u8bd1\u76ee\u6807\uff0c\u6700\u521d\u8bbe\u8ba1\u76ee\u7684\u662f\u89e3\u51b3 JavaScript \u7684\u6027\u80fd\u95ee\u9898\u3002WASM \u662f\u7531 W3C \u7275\u5934\u6b63\u5728\u63a8\u8fdb\u7684 Web \u6807\u51c6\uff0c\u5e76\u5f97\u5230\u4e86\u8c37\u6b4c\u3001\u5fae\u8f6f\u548c Mozilla \u7b49\u6d4f\u89c8\u5668\u5382\u5546\u7684\u652f\u6301\u3002"),(0,r.kt)("p",null,"\u5f00\u53d1\u9ad8\u6027\u80fd\u548c\u5b89\u5168\u7684\u667a\u80fd\u5408\u7ea6\uff0cC++\u662f\u6700\u597d\u7684\u8bed\u8a00\u3002Alaya WASM \u5408\u7ea6\u652f\u6301 C++\u7f16\u5199\uff0c\u540c\u65f6\u5728\u76ee\u524d\u6700\u4e3a\u6210\u719f\u7684\u7f16\u8bd1\u5de5\u5177\u94fe clang/llvm \u7684 C/C++\u7f16\u8bd1\u5668\u57fa\u7840\u4e0a\u5b9a\u5236\u4e00\u4e2a\u7b26\u5408 Alaya \u534f\u8bae\u6807\u51c6\u7684\u7f16\u8bd1\u5668\uff0c\u672c\u5f00\u53d1\u6307\u5357\u662f\u4ece\u5f00\u53d1\u8005\u89d2\u5ea6\u4ecb\u7ecd\u667a\u80fd\u5408\u7ea6\u7684\u5f00\u53d1\u6d41\u7a0b\u548c\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u5e38\u89c1\u95ee\u9898\uff0c\u5f15\u5bfc\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 C++\u5728 Alaya \u7f51\u7edc\u5feb\u901f\u5f00\u53d1\u51fa\u9ad8\u8d28\u91cf\u7684\u667a\u80fd\u5408\u7ea6\u3002"),(0,r.kt)("p",null,"\u4e3b\u8981\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u8fdb\u884c\u8bb2\u89e3\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%85%A5%E9%97%A8"},"\u5165\u95e8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91%E6%88%90%E6%9C%AC"},"\u5408\u7ea6\u5f00\u53d1\u6210\u672c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5"},"\u6700\u4f73\u5b9e\u8df5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#api"},"API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#faq"},"FAQ"))),(0,r.kt)("h2",{id:"\u5165\u95e8"},"\u5165\u95e8"),(0,r.kt)("h3",{id:"\u6982\u8981"},"\u6982\u8981"),(0,r.kt)("p",null,"\u672c\u6559\u7a0b\u4e3b\u8981\u662f\u6307\u5bfc\u7528\u6237\u5728 Alaya \u4e0a\u4f7f\u7528 wasm \u8bed\u8a00\u521b\u5efa\u7b80\u5355\u7684 HelloWorld \u667a\u80fd\u5408\u7ea6\uff0c\u901a\u8fc7 alaya-truffle \u7f16\u8bd1\uff0c\u90e8\u7f72\uff0c\u8c03\u7528\u6b64\u5408\u7ea6\u3002"),(0,r.kt)("h3",{id:"alaya-truffle-\u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd"},"alaya-truffle \u5f00\u53d1\u5de5\u5177\u4ecb\u7ecd"),(0,r.kt)("p",null,"alaya-truffle \u662f PlatON \u63d0\u4f9b\u7684\u4e00\u6b3e\u80fd\u591f\u5728\u672c\u5730\u7f16\u8bd1\u3001\u90e8\u7f72\u3001\u8c03\u7528\u667a\u80fd\u5408\u7ea6\u7684\u5de5\u5177\uff0c\u5177\u4f53\u7684\u5b89\u88c5\u53ca\u4f7f\u7528\u624b\u518c\u53c2\u89c1"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"alaya-truffle \u5f00\u53d1\u5de5\u5177",(0,r.kt)("a",{parentName:"p",href:"https://platon-truffle.readthedocs.io/en/alaya/getting-started/installation.html"},"\u5b89\u88c5\u53c2\u8003")),(0,r.kt)("p",{parentName:"li"},"\u5982\u679c wasm \u7f16\u8bd1\u5668\u56e0\u4e3a\u7f51\u7edc\u95ee\u9898\u603b\u662f\u4e0b\u8f7d\u5931\u8d25\uff0c\u53ef\u4ee5\u76f4\u63a5\u53bb github",(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/PlatON-CDT/releases/download/v0.13.2/platon-cdt.tar.gz"},"\u94fe\u63a5\u5730\u5740"),"\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u538b\u7f29\u6587\u4ef6\uff0c\u7136\u540e\u89e3\u538b\u5230~/.config/alaya-truffle/compilers \u76ee\u5f55\u4e0b\uff0c\u5e76\u5bf9\u5c06 platon-cdt/bin/wasm-opt \u8f6f\u94fe\u63a5\u5230/usr/bin \u76ee\u5f55")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"alaya-truffle \u5f00\u53d1\u5de5\u5177",(0,r.kt)("a",{parentName:"p",href:"https://platon-truffle.readthedocs.io/en/alaya/"},"\u4f7f\u7528\u624b\u518c")))),(0,r.kt)("h3",{id:"\u521b\u5efa-helloworld-\u5408\u7ea6"},"\u521b\u5efa HelloWorld \u5408\u7ea6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\nclass message {\n   public:\n      std::string head;\n      PLATON_SERIALIZE(message, (head))\n};\n\nclass my_message : public message {\n   public:\n      std::string body;\n      std::string end;\n      PLATON_SERIALIZE_DERIVED(my_message, message, (body)(end))\n};\n\nCONTRACT HelloWorld : public platon::Contract{\n   public:\n      ACTION void init(const my_message &one_message){\n        info.self().push_back(one_message);\n      }\n\n      ACTION void add_message(const my_message &one_message){\n          info.self().push_back(one_message);\n      }\n\n      CONST uint8_t get_message_size(){\n          return info.self().size();\n      }\n\n      CONST std::string get_message_body(const uint8_t index){\n          return info.self()[index].body;\n      }\n\n   private:\n      platon::StorageType<"myvector"_n, std::vector<my_message>> info;\n};\n\nPLATON_DISPATCH(HelloWorld, (init)(add_message)(get_message_size)(get_message_body))\n\n')),(0,r.kt)("p",null,"\u5408\u7ea6\u6587\u4ef6\u8bf4\u660e"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6bcf\u4e00\u4e2a\u5408\u7ea6\u6587\u4ef6\u53ea\u6709\u4e00\u4e2a\u5408\u7ea6\u7c7b\uff0c\u5408\u7ea6\u7c7b\u7528 CONTRACT \u4fee\u9970, \u5fc5\u987b\u516c\u6709\u7ee7\u627f platon::Contract\uff0c\u5fc5\u987b\u8981\u6709 init \u51fd\u6570\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ACTION \u548c CONST \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u8868\u793a\u53ef\u8c03\u7528\u51fd\u6570\uff0c\u6b64\u7c7b\u6210\u5458\u51fd\u6570\u4e0d\u53ef\u4ee5\u91cd\u8f7d\u3002ACTION \u51fd\u6570\u4f1a\u4fee\u6539\u94fe\u4e0a\u6570\u636e\uff0cCONST \u51fd\u6570\u53ea\u662f\u67e5\u8be2\u5c5e\u6027\u4e0d\u4f1a\u4fee\u6539\u94fe\u4e0a\u6570\u636e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u8c03\u7528\u51fd\u6570\u53c2\u6570\u5217\u8868\u4e2d\u7684\u7c7b\u578b\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6b64\u7c7b\u578b\u5b9a\u4e49\u4e2d\u9700\u52a0\u4e0a PLATON_SERIALIZE \u5b8f\u58f0\u660e\u5e8f\u5217\u5316\u51fd\u6570\uff0c\u6b64\u7c7b\u578b\u7ee7\u627f\u81ea\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u52a0\u4e0a PLATON_SERIALIZE_DERIVED \u5b8f\u58f0\u660e\u5e8f\u5217\u5316\u51fd\u6570\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u8c03\u7528\u51fd\u6570\u53ea\u6709\u5728 PLATON_DISPATCH \u5b8f\u5b9a\u4e49\u7edf\u4e00\u5165\u53e3\u51fd\u6570\uff0c\u624d\u80fd\u591f\u88ab\u5916\u90e8\u8c03\u7528\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u76ee\u524d Alaya \u4f1a\u5c06\u5408\u7ea6\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u6210\u5458\u53d8\u91cf\u5fc5\u987b\u662f platon::StorageType \u7c7b\u578b\uff0cplaton::StorageType \u6a21\u677f\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5b57\u7b26\u4e32\u540e\u9762\u52a0\u4e0a","_","n\uff0c\u5b57\u7b26\u4e32\u5fc5\u987b\u4e3a.12345abcdefghijklmnopqrstuvwxyz \u8fd9 32 \u5b57\u7b26\u4e2d\u7684\u5b57\u7b26\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5b9e\u9645\u5b58\u50a8\u7684\u5177\u4f53\u7c7b\u578b\u3002\u6210\u5458\u51fd\u6570\u4fee\u6539\u6210\u5458\u53d8\u91cf\u9700\u8981\u901a\u8fc7 self() \u51fd\u6570\u83b7\u53d6\u5177\u4f53\u7c7b\u578b\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u5b9e\u4f8b\u51fd\u6570\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"platon::StorageType \u6a21\u677f\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7c7b\u578b\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u6b64\u7c7b\u578b\u5b9a\u4e49\u4e2d\u9700\u52a0\u4e0a PLATON_SERIALIZE \u5b8f\u58f0\u660e\u5e8f\u5217\u5316\u51fd\u6570\uff0c\u6b64\u7c7b\u578b\u7ee7\u627f\u81ea\u5176\u4ed6\u7c7b\u578b\uff0c\u9700\u52a0\u4e0a PLATON_SERIALIZE_DERIVED \u5b8f\u58f0\u660e\u5e8f\u5217\u5316\u51fd\u6570\u3002"))),(0,r.kt)("h3",{id:"\u7f16\u8bd1-helloworld-\u5408\u7ea6"},"\u7f16\u8bd1 HelloWorld \u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step1.")," \u4e3a HelloWorld \u9879\u76ee\u521b\u5efa\u65b0\u76ee\u5f55"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mkdir HelloWorld && cd HelloWorld\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ee5\u4e0b\u547d\u4ee4\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u90fd\u5728 HelloWorld \u76ee\u5f55\u4e0b\u8fdb\u884c")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step2.")," \u4f7f\u7528 alaya-truffle \u521d\u59cb\u5316\u4e00\u4e2a\u5de5\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"alaya-truffle init\n")),(0,r.kt)("p",null,"\u5728\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u6709\u5982\u4e0b\u9879\u76ee\u7ed3\u6784\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"contracts/: wasm \u5408\u7ea6\u76ee\u5f55")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"migrations/: \u90e8\u7f72\u811a\u672c\u6587\u4ef6\u76ee\u5f55")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"test/: \u6d4b\u8bd5\u811a\u672c\u76ee\u5f55")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"truffle-config.js: alaya-truffle \u914d\u7f6e\u6587\u4ef6"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step3.")," \u5c06\u4e4b\u524d\u7f16\u5199\u597d\u7684 HelloWorld \u5408\u7ea6\u653e\u81f3 HelloWorld/contracts/\u76ee\u5f55\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ls contracts/\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c06\u770b\u5230 HelloWorld.cpp")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step4.")," \u4fee\u6539 alaya-truffle \u914d\u7f6e\u6587\u4ef6 truffle-config.js\uff0c\u6dfb\u52a0\u7f16\u8bd1 wasm \u5408\u7ea6\u7248\u672c\u53f7"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vim truffle-config.js\n")),(0,r.kt)("p",null,"truffle-config.js \u4fee\u6539\u90e8\u5206\u5185\u5bb9\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'compilers: {\n     wasm: {\n           version: "1.0.0"\n     }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step5.")," \u7f16\u8bd1\u5408\u7ea6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"alaya-truffle compile\n")),(0,r.kt)("p",null,"\u5728\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\uff0c\u751f\u6210\u5982\u4e0b\u76ee\u5f55\u7ed3\u6784\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build/")," wasm \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u76ee\u5f55"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build/contracts/HelloWorld.abi.json")," HelloWorld \u5408\u7ea6\u7f16\u8bd1\u540e\u7684 abi \u63a5\u53e3\u6587\u4ef6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build/contracts/HelloWorld.wasm")," HelloWorld \u5408\u7ea6\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6")),(0,r.kt)("h3",{id:"\u90e8\u7f72-helloworld-\u5408\u7ea6"},"\u90e8\u7f72 HelloWorld \u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step1.")," \u4fee\u6539 truffle-config.js \u4e2d\u94fe\u7684\u914d\u7f6e\u4fe1\u606f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"vim truffle-config.js\n")),(0,r.kt)("p",null,"\u5c06 truffle-config.js \u4e2d\u7684\u533a\u5757\u94fe\u76f8\u5173\u914d\u7f6e\u4fee\u6539\u6210\u60a8\u771f\u5b9e\u8fde\u63a5\u7684\u94fe\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'networks: {\n    development: {\n       host: "10.1.1.6",     // \u533a\u5757\u94fe\u6240\u5728\u670d\u52a1\u5668\u4e3b\u673a\n       port: 8806,            // \u94fe\u7aef\u53e3\u53f7\n       network_id: "*",       // Any network (default: none)\n       from: "atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp",\n       gas: 999999,\n       gasPrice: 50000000004,\n    },\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step2.")," \u89e3\u9501\u94b1\u5305\u8d26\u6237"),(0,r.kt)("p",null,"\u8fdb\u5165 alaya-truffle \u63a7\u5236\u53f0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"alaya-truffle console\n")),(0,r.kt)("p",null,"\u5bfc\u5165\u79c1\u94a5\uff08\u5982\u679c\u4e4b\u524d\u5df2\u5bfc\u5165\u53ef\u4ee5\u8df3\u8fc7\u6b64\u6b65\u9aa4\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'web3.platon.personal.importRawKey("\u60a8\u7684\u94b1\u5305\u79c1\u94a5","\u60a8\u7684\u94b1\u5305\u5bc6\u7801");\n')),(0,r.kt)("p",null,"\u5bfc\u5165\u6210\u529f\u5c06\u770b\u5230\u79c1\u94a5\u5bf9\u5e94\u7684\u5730\u5740\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"'atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp'\n")),(0,r.kt)("p",null,"\u89e3\u9501\u94b1\u5305\u8d26\u6237"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"}," web3.platon.personal.unlockAccount('\u60a8\u7684\u94b1\u5305\u5730\u5740','\u60a8\u7684\u94b1\u5305\u5bc6\u7801',999999);\n")),(0,r.kt)("p",null,"\u89e3\u9501\u6210\u529f\u5c06\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ture\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step3.")," \u90e8\u7f72 HelloWorld \u5408\u7ea6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'alaya-truffle deploy --wasm --contract-name HelloWorld --params \'[[["1"], "2", "3"]]\'\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HelloWorld")," :\u8981\u90e8\u7f72\u7684\u5408\u7ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"params")," :\u5408\u7ea6 init \u51fd\u6570\u5bf9\u5e94\u7684\u53c2\u6570")),(0,r.kt)("p",null,"\u90e8\u7f72\u6210\u529f\u540e\uff0c\u5c06\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"receipt:  { blockHash:\n   '0x266733b693ba650315a59c34e72804c06ca3e27fab145625797bd42259b572c5',\n  blockNumber: 70441,\n  contractAddress: 'atp12ts3s0zd7s8hm2vwv8wxe3rpvrwpv6tpsx8shx',\n  cumulativeGasUsed: 291314,\n  from: 'atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp',\n  gasUsed: 291314,\n  logs: [],\n  logsBloom:\n   '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n  status: true,\n  to: null,\n  transactionHash:\n   '0x60946ebf0ccddc76a0234353435de73e7901888227fb2f03922fb0ce265a4e9d',\n  transactionIndex: 0 }\n  contract HelloWorld deployed successfully\n======================\n\n   > transactionHash:     0x60946ebf0ccddc76a0234353435de73e7901888227fb2f03922fb0ce265a4e9d\n   > contract address:    atp12ts3s0zd7s8hm2vwv8wxe3rpvrwpv6tpsx8shx\n   > block number:        70441\n   > block timestamp:     1583247148341\n   > account:             atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp\n   > balance:             3533694129556768659166595001485837031654967793751237866225582808584074296\n   > gas limit:           100000000\n   > gas used:            291314\n   > gas price:           0.000000050000000004 ATP\n   > total cost:          0.014565700001165256 ATP\n")),(0,r.kt)("h3",{id:"\u8c03\u7528-helloworld-\u5408\u7ea6"},"\u8c03\u7528 HelloWorld \u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step1.")," \u8fdb\u5165 alaya-truffle \u63a7\u5236\u53f0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"alaya-truffle console\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4ee5\u4e0b\u8c03\u7528\u67e5\u8be2\u5c06\u5728 alaya-truffle \u63a7\u5236\u53f0\u4e2d\u8fdb\u884c")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step2.")," \u6784\u5efa\u5408\u7ea6\u5bf9\u8c61"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'var abi = [{"baseclass":[],"fields":[{"name":"head","type":"string"}],"name":"message","type":"struct"},{"baseclass":["message"],"fields":[{"name":"body","type":"string"},{"name":"end","type":"string"}],"name":"my_message","type":"struct"},{"constant":false,"input":[{"name":"one_message","type":"my_message"}],"name":"init","output":"void","type":"Action"},{"constant":false,"input":[{"name":"one_message","type":"my_message"}],"name":"add_message","output":"void","type":"Action"},{"constant":true,"input":[],"name":"get_message_size","output":"uint8","type":"Action"},{"constant":true,"input":[{"name":"index","type":"uint8"}],"name":"get_message_body","output":"string","type":"Action"}];\nvar contractAddr = \'atp12ts3s0zd7s8hm2vwv8wxe3rpvrwpv6tpsx8shx\';\n\nvar helloworld = new web3.platon.Contract(abi,contractAddr,{vmType: 1 });\n')),(0,r.kt)("p",null,"\u8bf4\u660e\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"abi")," \u662f\u5408\u7ea6\u63d0\u4f9b\u7ed9\u5916\u90e8\u8c03\u7528\u65f6\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u5408\u7ea6\u5bf9\u5e94\u7684 abi \u5728\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u4e2d\uff0c\u5982\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"HelloWorld/build/contracts/HelloWorld.json")," \u4e2d\u53ef\u4ee5\u627e\u5230"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contractAddr")," \u5728\u90e8\u7f72\u5408\u7ea6\u6210\u529f\u540e\u6709\u4e00\u4e2a contract address"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"helloWorld")," \u5c31\u662f\u6784\u5efa\u51fa\u6765\u4e0e\u94fe\u4e0a\u5408\u7ea6\u4ea4\u4e92\u7684\u5408\u7ea6\u5bf9\u8c61\u62bd\u8c61")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step3.")," \u8c03\u7528\u5408\u7ea6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"helloworld.methods\n  .add_message([['5'], '6', '7'])\n  .send({\n    from: 'atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp',\n    gas: 999999\n  })\n  .on('receipt', function (receipt) {\n    console.log(receipt)\n  })\n  .on('error', console.error)\n")),(0,r.kt)("p",null,"\u8c03\u7528\u5408\u7ea6\u547d\u4ee4\u8bf4\u660e\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"helloWorld")," \u662f\u4e4b\u524d\u6784\u5efa\u7684\u5408\u7ea6\u5bf9\u8c61"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"methods")," \u56fa\u5b9a\u8bed\u6cd5,\u540e\u9762\u7d27\u8ddf\u5408\u7ea6\u7684\u65b9\u6cd5\u540d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"add_message")," \u662f\u6211\u4eec HelloWorld \u5408\u7ea6\u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u6709\u4e00\u4e2a\u81ea\u5b9a\u4e49 my_message \u7c7b\u578b\u7684\u5165\u53c2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from")," \u8c03\u7528\u8005\u7684\u94b1\u5305\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas")," gas \u503c"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"on")," \u662f\u76d1\u542c\u5408\u7ea6\u5904\u7406\u7ed3\u679c\u4e8b\u4ef6\uff0c\u6b64\u5904\u5982\u679c\u6210\u529f\u5c06\u6253\u5370\u56de\u6267\uff0c\u5931\u8d25\u8f93\u51fa\u9519\u8bef\u65e5\u5fd7")),(0,r.kt)("p",null,"\u51fd\u6570\u8c03\u7528\u6210\u529f\uff0c\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{ blockHash:\n   '0x669c7b8cb938cc30845e08dc4ceda08f2e17207c267ade97dc5458b445405736',\n  blockNumber: 74665,\n  contractAddress: null,\n  cumulativeGasUsed: 108549,\n  from: 'atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp',\n  gasUsed: 108549,\n  logsBloom:\n   '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n  status: true,\n  to: 'atp12ts3s0zd7s8hm2vwv8wxe3rpvrwpv6tpsx8shx',\n  transactionHash:\n   '0x2b5e590df7e70ad428b1ccb06bda5dcce47f84c4d981c2fb475aca9ec9d0000a',\n  transactionIndex: 0,\n  events: {} }\n{ blockHash:\n   '0x669c7b8cb938cc30845e08dc4ceda08f2e17207c267ade97dc5458b445405736',\n  blockNumber: 74665,\n  contractAddress: null,\n  cumulativeGasUsed: 108549,\n  from: 'atp1jtfqqqr6436ppj6ccnrh8xjg7qals3ctnnmurp',\n  gasUsed: 108549,\n  logsBloom:\n   '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n  status: true,\n  to: 'atp12ts3s0zd7s8hm2vwv8wxe3rpvrwpv6tpsx8shx',\n  transactionHash:\n   '0x2b5e590df7e70ad428b1ccb06bda5dcce47f84c4d981c2fb475aca9ec9d0000a',\n  transactionIndex: 0,\n  events: {} }\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step4.")," \u5408\u7ea6\u67e5\u8be2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"helloworld.methods.get_message_body(0).call()\n")),(0,r.kt)("p",null,"\u67e5\u8be2\u5408\u7ea6\u547d\u4ee4\u8bf4\u660e\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"helloWorld")," \u662f\u4e4b\u524d\u6784\u5efa\u7684\u5408\u7ea6\u5bf9\u8c61"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"methods")," \u6307\u5b9a\u5c06\u83b7\u53d6\u5408\u7ea6\u4e2d\u7684\u65b9\u6cd5"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get_message_body")," \u662f\u6211\u4eec HelloWorld \u5408\u7ea6\u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6709\u4e00\u4e2a int \u7c7b\u578b\u7684\u5165\u53c2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"call")," \u6307\u660e\u662f\u67e5\u8be2\u65b9\u6cd5")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u5408\u7ea6\u5f00\u53d1\u6210\u672c"},"\u5408\u7ea6\u5f00\u53d1\u6210\u672c"),(0,r.kt)("h3",{id:"\u6982\u8981-1"},"\u6982\u8981"),(0,r.kt)("p",null,"\u5728\u533a\u5757\u94fe\u7cfb\u7edf\u4e2d\uff0c\u57fa\u4e8e\u4efb\u4f55\u4e00\u6761\u516c\u94fe\u7cfb\u7edf\u5f00\u53d1\u667a\u80fd\u5408\u7ea6\u90fd\u6d89\u53ca\u8d44\u6e90\u652f\u51fa\u7684\u5f00\u53d1\u6210\u672c\u3002\u4f8b\u5982\uff0c\u5728\u7f51\u7edc\u4e0a\u90e8\u7f72/\u8c03\u7528\u667a\u80fd\u5408\u7ea6\uff0c\u8fdb\u884c\u80fd\u91cf\u8f6c\u79fb\uff0c\u8d28\u62bc/\u59d4\u6258\u7b49\u64cd\u4f5c\u90fd\u9700\u8981\u82b1\u8d39\u4e00\u5b9a\u7684\u6210\u672c\uff0c\u4e0d\u540c\u7684\u533a\u5757\u94fe\u7f51\u7edc\u5f00\u53d1\u6210\u672c\u4e0d\u4e00\u6837\uff0c\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u4e2d\u8fd0\u884c\u7740\u4e24\u79cd\u865a\u62df\u673a EVM \u548c WASM\uff0c\u5728\u4e0d\u540c\u865a\u62df\u673a\u4e0a\u4e0a\u5f00\u53d1\u667a\u80fd\u5408\u7ea6\u7684\u6210\u672c\u4e5f\u662f\u4e0d\u4e00\u6837\u7684\u3002\u672c\u624b\u518c\u5c06\u91cd\u70b9\u4ecb\u7ecd\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"WASN")," \u865a\u62df\u673a\u6d89\u53ca\u5230\u7684\u6210\u672c\u4f7f\u7528\uff0c\u672c\u6587\u5c06\u7528\u8868\u683c\u7684\u5f62\u5f0f\u5bf9\u6bd4\u5c0f\u578b\u5408\u7ea6\u3001\u4e2d\u578b\u5408\u7ea6\u548c\u5927\u578b\u5408\u7ea6\u7684\u4e0d\u540c\u5f00\u53d1\u6210\u672c\uff0c\u540c\u65f6\u5c06 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"EVM"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"WASM"),"\u865a\u62df\u673a\u548c\u4ee5\u592a\u574a\u865a\u62df\u673a\u4e4b\u95f4\u8fdb\u884c\u5bf9\u6bd4\u3002\u5728\u5408\u7ea6\u65b9\u9762\uff0c\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"SET/GET"),"\u529f\u80fd\u7684\u5408\u7ea6\u4f5c\u4e3a\u5c0f\u578b\u6d4b\u8bd5\u5408\u7ea6\uff0c\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b\u5c06\u4f7f\u7528\u4e00\u4e2a\u5f00\u6e90\u7684",(0,r.kt)("a",{parentName:"p",href:"https://github.com/yep/eth-tweet"},"\u5fae\u535a\u5ba2"),"\u5408\u7ea6\uff0c\u800c\u5927\u578b\u5408\u7ea6\u5219\u662f\u4e00\u4e2a\u7b26\u5408 ",(0,r.kt)("inlineCode",{parentName:"p"},"ERC20")," \u6807\u51c6\u7684\u667a\u80fd\u5408\u7ea6\u3002"),(0,r.kt)("h4",{id:"\u8d44\u6e90\u6d88\u8017"},"\u8d44\u6e90\u6d88\u8017"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u7b80\u5355 set/get \u5408\u7ea6")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017 Gas"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-EVM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.3 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"76953"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"384765 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.000384765 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.3 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"127173"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"wei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"635865 ",(0,r.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.000635865 ",(0,r.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-WASM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5c0f\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"13.55 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"184043"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"920215 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.000920215 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5fae\u535a\u5ba2")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017 Gas"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-EVM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2.08 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"257065"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"1285325 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.001285325 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2.08 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"621385"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"wei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"3106925 ",(0,r.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.003106925 ",(0,r.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-WASM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e2d\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"30.07 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"349713"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"1748565 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.001748565 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ERC20 \u6807\u51c6 Token")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\u7cfb\u7edf"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u7ea7\u522b"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5408\u7ea6\u5927\u5c0f"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u6d88\u8017 Gas"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Gas \u5355\u4ef7"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u80fd\u91cf\u635f\u8017"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u5907\u6ce8"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-EVM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4.45 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"552823"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"2764115 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.002764115 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Ethereum"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4.45 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1282171"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"wei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"6410855 ",(0,r.kt)("inlineCode",{parentName:"td"},"Gwei")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.006410855 ",(0,r.kt)("inlineCode",{parentName:"td"},"ETH"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Alaya-WASM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5927\u578b\u5408\u7ea6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"35.9 kb"),(0,r.kt)("td",{parentName:"tr",align:"left"},"486274"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5,000,000,000 ",(0,r.kt)("inlineCode",{parentName:"td"},"VON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"2431370 ",(0,r.kt)("inlineCode",{parentName:"td"},"gVON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0.00243137 ",(0,r.kt)("inlineCode",{parentName:"td"},"ATP"))))),(0,r.kt)("h3",{id:"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b"},"\u5c0f\u578b\u5408\u7ea6\u793a\u4f8b"),(0,r.kt)("h4",{id:"\u7b80\u5355-setget-\u5408\u7ea6"},"\u7b80\u5355 set/get \u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"EVM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pragma solidity ^0.4.12;\n\ncontract SimpleTest {\n\n    uint public age;\n\n    function setAge(uint _input) public {\n        age = _input;\n    }\n\n    function getAge() public constant returns (uint) {\n        return age;\n    }\n}\n")),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"608060405234801561001057600080fd5b50610117806100206000396000f3006080604052600436106053576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063262a9dff146058578063967e6e65146080578063d5dcf1271460a8575b600080fd5b348015606357600080fd5b50606a60d2565b6040518082815260200191505060405180910390f35b348015608b57600080fd5b50609260d8565b6040518082815260200191505060405180910390f35b34801560b357600080fd5b5060d06004803603810190808035906020019092919050505060e1565b005b60005481565b60008054905090565b80600081905550505600a165627a7a7230582079e51340567895e1097e1c9115e778c3d982b8e71b6997c57f1ba497c56c8b3b0029\n")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"311 byte => 0.3 kb")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WASM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\nCONTRACT SimpleStorage: public platon::Contract\n{\n    public:\n        ACTION void init(){}\n\n        ACTION void set(uint64_t input)\n        {\n            storedData.self() = input;\n        }\n\n        CONST uint64_t get()\n        {\n            return storedData.self();\n        }\n\n    private:\n        platon::StorageType<"sstored"_n, uint64_t> storedData;\n};\n\nPLATON_DISPATCH(SimpleStorage,(init)(set)(get))\n')),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/SimpleStorage_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"13882 byte => 13.55 kb")),(0,r.kt)("hr",null),(0,r.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,r.kt)("p",null,"Alaya-EVM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 76953"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 384765 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.000384765 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("p",null,"\u4ee5\u592a\u574a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 127173"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 635865 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.000635865 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("p",null,"Alaya-WASM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 184043"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 920215 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.000920215 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b"},"\u4e2d\u578b\u5408\u7ea6\u793a\u4f8b"),(0,r.kt)("h4",{id:"\u5fae\u535a\u5ba2\u5408\u7ea6"},"\u5fae\u535a\u5ba2\u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"EVM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/account.sol"},"\u70b9\u51fb\u67e5\u770b\u5fae\u535a\u5ba2\u8d26\u6237\u5408\u7ea6")),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Tweet_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"2130.5 byte => 2.08 kb")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WASM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\n// data structure of a single tweet.\nstruct Tweet{\n\n    public:\n        uint64_t timestamp;\n        std::string tweetString;\n\n    public:\n        Tweet(){}\n        Tweet(uint64_t &timestamp, const std::string &tweet):timestamp(timestamp), tweetString(tweet) {\n        }\n\n    public:\n        PLATON_SERIALIZE(Tweet, (timestamp)(tweetString))\n};\n\nCONTRACT TweetAccount: public platon::Contract\n{\n    private:\n        // "array" of all tweets of this account: maps the tweet id to the actual tweet.\n        platon::StorageType<"smapping"_n, std::map<std::uint64_t, Tweet>> _tweets;\n        // total number of tweets in the above _tweets mapping.\n        platon::StorageType<"suint"_n, uint64_t> _numberOfTweets;\n        // "owner" of this account: only admin is allowed to tweet.\n        platon::StorageType<"saddress"_n, Address> _adminAddress;\n\n    public:\n        ACTION void init()\n        {\n            _numberOfTweets.self() = 0;\n            _adminAddress.self() = platon::platon_caller();\n        }\n\n        // returns true if caller of function("sender") is admin.\n        CONST bool isAdmin(){\n            return platon::platon_caller() == _adminAddress.self();\n        }\n\n        // create new tweet\n        ACTION int64_t tweet(const std::string& tweetString) {\n            int64_t result = 0;\n            if(!isAdmin()){\n                // only owner is allowed to create tweets for this account.\n                result = -1;\n            } else if (tweetString.length() > 160) {\n                // tweet contains more than 160 bytes.\n                result = -2;\n            } else {\n                _tweets.self()[_numberOfTweets].timestamp = platon_timestamp();\n                _tweets.self()[_numberOfTweets].tweetString = tweetString;\n                _numberOfTweets.self() = _numberOfTweets.self() + 1;\n                result = 0; // success.\n            }\n            return result;\n        }\n\n        CONST std::string getTweet(uint64_t tweetId){\n            // returns two values\n            std::string tweetString = _tweets.self()[tweetId].tweetString;\n            uint64_t timestamp = _tweets.self()[tweetId].timestamp;\n            return tweetString;\n        }\n\n        CONST std::string getLatestTweet() {\n            // returns three values.\n            std::string tweetString = _tweets.self()[_numberOfTweets.self() - 1].tweetString;\n            uint64_t timestamp = _tweets.self()[_numberOfTweets.self() - 1].timestamp;\n            uint64_t numberOfTweets = _numberOfTweets.self();\n            return tweetString;\n        }\n\n        CONST Address getOwnerAddress() {\n            return _adminAddress.self();\n        }\n\n        CONST uint64_t getNumberOfTweets() {\n            return _numberOfTweets.self();\n        }\n\n        ACTION void adminRetrieveDonations(const Address& receiver) {\n            if(isAdmin()){\n                Address caddr = platon_address();\n                Energon e = platon_balance(caddr);\n                platon_transfer(receiver, e);\n            }\n        }\n\n        CONST Address caddr(){\n            return platon_address();\n        }\n\n        CONST std::string caddrBalance(Address receiver){\n            //Address caddr = platon_address();\n            Energon e = platon_balance(receiver);\n            return std::to_string(e.Get());\n        }\n\n        ACTION void adminDeleteAccount(){\n            if(isAdmin()){\n                // this is a predefined function, it deletes theh contract and returns all funds to the owner.\n                platon_destroy(_adminAddress.self());\n            }\n        }\n};\n\nPLATON_DISPATCH(TweetAccount,(init)(isAdmin)(tweet)(getTweet)(getLatestTweet)\n(getOwnerAddress)(getNumberOfTweets)(adminRetrieveDonations)(adminDeleteAccount)\n(caddr)(caddrBalance))\n')),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Tweet_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"30788")," byte => 30.07 kb`"),(0,r.kt)("hr",null),(0,r.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c-1"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,r.kt)("p",null,"Alaya-EVM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 257065"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 1285325 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.001285325 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("p",null,"\u4ee5\u592a\u574a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 621385"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 3106925 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.003106925 ",(0,r.kt)("inlineCode",{parentName:"li"},"ETH"),"\uff09")),(0,r.kt)("p",null,"Alaya-WASM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 349713"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 1748565 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.001748565 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"\u5927\u578b\u5408\u7ea6\u793a\u4f8b"},"\u5927\u578b\u5408\u7ea6\u793a\u4f8b"),(0,r.kt)("h4",{id:"erc20-\u6807\u51c6-token-\u5408\u7ea6"},"ERC20 \u6807\u51c6 token \u5408\u7ea6"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"EVM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/token.sol"},"\u70b9\u51fb\u67e5\u770b ERC20 \u6807\u51c6\u7684\u667a\u80fd\u5408\u7ea6")),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Token_evm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"4557.5 byte => 4.45 kb")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WASM \u793a\u4f8b\u4ee3\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'#include <platon/platon.hpp>\n#include <string>\nusing namespace platon;\n\nclass Token {\n    public:\n        // total amount of tokens\n        platon::StorageType<"totalsupply"_n, uint64_t> totalSupply;\n\n    public: // event\n        // define: _from, _to, _value\n        PLATON_EVENT2(Transfer, Address, Address, uint64_t);\n        // define: _owner, _spender, _value\n        PLATON_EVENT2(Approval, Address, Address, uint64_t);\n\n    public:\n        // @param _owner The address from which the balance will be retrieved\n        // @return The balance.\n        virtual uint64_t balanceOf(Address _owner) = 0;\n\n        // @notice send \'_value\' token to `_to` from `msg.sender`\n        // @param _to THe address of the recipient.\n        // @param _value The amount of token to be transferred.\n        // @return Whether the transfer was successful or not.\n        virtual bool transfer(Address _to, uint64_t _value) = 0;\n\n        // @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\n        // @param _from The address of the sender.\n        // @param _to The address of the recepient.\n        // @param _value The amount of token to be transferred.\n        // @return Whether the transfer was successful or not.\n        virtual bool transferFrom(Address _from, Address _to, uint64_t _value) = 0;\n\n        // @notice `msg.sender` approves `_spender` to spend `_value` tokens\n        // @param _spender The address of the account able to transfer the tokens\n        // @param _value The amount of tokens to be approved for transfer\n        // @return Whether thee approval was successful or not.\n        virtual bool approve(Address _spender, uint64_t _value) = 0;\n\n        // @param _owner The address of the account owning tokens\n        // @param _spender The address of the account able to transfer the tokens\n        // @return Amount of remaining tokens allowed to spent.\n        virtual uint64_t allowance(Address _owner, Address _spender) = 0;\n};\n\n// You should inherit from StandardTOken or, for a token like you would want\n// to deploy in something like MIst, see HumanStandardToken.cpp.\n// (This implements ONLY the standard functions and NOTHING else.\n// If you deploy this, you won\'t have anthing useful.)\nclass StandardToken: public Token\n{\n    protected:\n        platon::StorageType<"balances"_n, std::map<Address, uint64_t>> balances;\n        platon::StorageType<"allowed"_n, std::map<Address, std::map<Address, uint64_t>>> allowed;\n\n    public:\n        CONST uint64_t balanceOf(Address _owner) {\n            return balances.self()[_owner];\n        }\n\n        ACTION bool transfer(Address _to, uint64_t _value){\n            // Default assumes totalSupply can\'t be over max(2^64 - 1)\n            // If your token leaves out totalSupply and can issue more tokens as time goes on,\n            // you need to check if it doesn\'t wrap.\n            // Replace the if with this on instead.\n            Address sender = platon_caller();\n            if (balances.self()[sender] >= _value && _value > 0) {\n                balances.self()[sender] -= _value;\n                balances.self()[_to] += _value;\n                PLATON_EMIT_EVENT2(Transfer, sender, _to, _value);\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        ACTION bool transferFrom(Address _from, Address _to, uint64_t _value) {\n            // same as above. Replace this line with the following if you want to protect against\n            // wrapping uints.\n            Address sender = platon_caller();\n            if(balances.self()[_from] >= _value\n                && allowed.self()[_from][sender] >= _value && _value > 0){\n                balances.self()[_to] += _value;\n                balances.self()[_from] -= _value;\n                PLATON_EMIT_EVENT2(Transfer, _from, _to, _value);\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        ACTION bool approve(Address _spender, uint64_t _value){\n            Address sender = platon_caller();\n            allowed.self()[sender][_spender] = _value;\n            PLATON_EMIT_EVENT2(Approval, sender, _spender, _value);\n            return true;\n        }\n\n        CONST uint64_t allowance(Address _owner, Address _spender){\n            return allowed.self()[_owner][_spender];\n        }\n};\n\n\nCONTRACT LATToken: public platon::Contract, public StandardToken\n{\n\n    public:\n        platon::StorageType<"name"_n, std::string> name;        // fancy name: eg PlatON Token\n        platon::StorageType<"decimals"_n, uint8_t> decimals;    // HOw many decimals to show.\n        platon::StorageType<"symbol"_n, std::string> symbol;    // An identifier: eg LTT\n        platon::StorageType<"version"_n, std::string> version;  // 0.1 standard. Just an arbitrary versioning scheme.\n\n    public:\n        ACTION void init(uint64_t _initialAmount, const std::string& _tokenName,\n            uint8_t _decimalUnits, const std::string& _tokenSymbol)\n        {\n            Address sender = platon_caller();\n            balances.self()[sender] = _initialAmount;       // Give the creator all initial tokens.\n            totalSupply.self() = _initialAmount;            // Update total supply.\n            name.self() = _tokenName;                       // Set the name for display purposes\n            decimals.self() = _decimalUnits;                // Amount of decimals for display purposes\n            symbol.self() = _tokenSymbol;                   // Set the symbol for display purposes.\n        }\n\n        CONST std::string getName(){\n            return name.self();\n        }\n\n        CONST uint8_t getDecimals(){\n            return decimals.self();\n        }\n\n        CONST std::string getSymbol(){\n            return symbol.self();\n        }\n\n        CONST uint64_t getTotalSupply(){\n            return totalSupply.self();\n        }\n\n        // Approves and then calls the receiving contract.\n        ACTION bool approveAndCall(Address _spender, uint64_t _value, const bytes& _extraData) {\n            Address sender = platon_caller();\n            allowed.self()[sender][_spender] = _value;\n            PLATON_EMIT_EVENT2(Approval, sender, _spender, _value);\n            // call the receiveApproval function on the contract you want to be notified. This\n            // crafts the function signature manually so one doesn\'t have to include a contract\n            // in here just for this.\n            // define: receiveApproval(Address _from, uint64_t _value, Address _tokenContract, bytes& _extraDaa)\n            // it is assumed that when does this that the call should succeed.\n            return true;\n        }\n};\n\nPLATON_DISPATCH(LATToken,(init)(balanceOf)(transfer)(transferFrom)(approve)(allowance)\n(getName)(getDecimals)(getSymbol)(getTotalSupply)(approveAndCall))\n')),(0,r.kt)("p",null,"\u5b57\u8282\u7801"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/alaya-devdocs/blob/master/zh-cn/Development/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E5%BC%80%E5%8F%91.assets/Token_wasm.bin"},"\u67e5\u770b\u5b57\u8282\u7801")),(0,r.kt)("p",null,"\u5b57\u8282\u5927\u5c0f\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"36764 byte => 35.9 kb")),(0,r.kt)("hr",null),(0,r.kt)("h6",{id:"\u521b\u5efa\u90e8\u7f72\u5408\u7ea6\u6210\u672c-2"},"\u521b\u5efa&\u90e8\u7f72\u5408\u7ea6\u6210\u672c"),(0,r.kt)("p",null,"Alaya-EVM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 552823"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 2764115 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.002764115 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("p",null,"\u4ee5\u592a\u574a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 1282171"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 6410855 ",(0,r.kt)("inlineCode",{parentName:"li"},"Gwei"),"\uff080.006410855 ",(0,r.kt)("inlineCode",{parentName:"li"},"ETH"),"\uff09")),(0,r.kt)("p",null,"Alaya-WASM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Gas \u6d88\u8017: 486274"),(0,r.kt)("li",{parentName:"ul"},"Gas \u5355\u4ef7: 5,000,000,000 (5 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),")"),(0,r.kt)("li",{parentName:"ul"},"\u603b\u6210\u672c: 2431370 ",(0,r.kt)("inlineCode",{parentName:"li"},"gVON"),"\uff080.00243137 ",(0,r.kt)("inlineCode",{parentName:"li"},"ATP"),"\uff09")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u6700\u4f73\u5b9e\u8df5"},"\u6700\u4f73\u5b9e\u8df5"),(0,r.kt)("h3",{id:"\u4ecb\u7ecd"},"\u4ecb\u7ecd"),(0,r.kt)("p",null,"\u672c\u6307\u5357\u5411\u7528\u6237\u4ecb\u7ecd\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u4e2d\u9700\u8981\u5173\u6ce8\u7684\u4e00\u4e9b\u5173\u952e\u70b9,\u4e3b\u8981\u504f\u5411\u4e8e\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u7684\u5b9e\u8df5.\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u672c\u6307\u5357\u5feb\u901f\u4e86\u89e3\u9488\u5bf9\u4e00\u7b14\u4ea4\u6613\u5982\u4f55\u5408\u7406\u7684\u8bbe\u7f6e\u624b\u7eed\u8d39, \u5982\u4f55\u907f\u514d\u88ab\u56e0\u4ea4\u6613\u5931\u8d25\n\u7684\u540c\u65f6\u635f\u5931\u624b\u7eed\u8d39\u4ee5\u53ca\u5982\u4f55\u7f16\u7801\u66f4\u52a0\u89c4\u8303\u7684\u667a\u80fd\u5408\u7ea6."),(0,r.kt)("h3",{id:"\u8d39\u7528\u5408\u7406\u8bbe\u7f6e"},"\u8d39\u7528\u5408\u7406\u8bbe\u7f6e"),(0,r.kt)("p",null,"\u5f53\u9700\u8981\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7684\u4e3b\u7f51\u4e0a\u90e8\u7f72\u5408\u7ea6\u65f6, \u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5408\u7406\u7684\u8d39\u7528\u9650\u5236. \u8d39\u7528\u9650\u5236\u662f\u6307\n",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u4e2d\u667a\u80fd\u5408\u7ea6\u90e8\u7f72/\u6267\u884c\u7684\u80fd\u6e90\u6d88\u8017\u6210\u672c\u7684\u4e0a\u9650. \u8be5\u9650\u5236\u4e3b\u8981\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u5b8c\u6210,\n",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u4e16\u754c\u7684\u71c3\u6599\u503c, \u5b83\u51b3\u5b9a\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u751f\u6001\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c. \u901a\n\u5e38\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas"),' \u6765\u8861\u91cf\u6267\u884c\u67d0\u4e9b\u52a8\u4f5c\u9700\u8981\u591a\u5c11"\u5de5\u4f5c\u91cf", \u8fd9\u4e9b\u5de5\u4f5c\u91cf\u5c31\u662f\u4e3a\u4e86\u6267\u884c\u8be5\u52a8\u4f5c\u6240\n\u9700\u8981\u652f\u4ed8\u7ed9 ',(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u7684\u8d39\u7528\u989d\u5ea6. \u7b80\u5355\u7406\u89e3, ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u662f\u7f51\u7edc\u65f7\u5de5\u7684\u4f63\u91d1, \u5e76\u901a\u8fc7\n",(0,r.kt)("inlineCode",{parentName:"p"},"ATP")," \u7684\u65b9\u5f0f\u652f\u4ed8, \u5728\u7f51\u7edc\u4e0a\u7684\u4efb\u4f55\u4ea4\u6613, \u5408\u7ea6\u6267\u884c, \u6570\u636e\u5b58\u50a8, \u90fd\u9700\u8981\u4f7f\u7528\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas"),"."),(0,r.kt)("p",null,"Alaya \u4e0e\u4ee5\u592a\u574a\u533a\u5757\u94fe\u7cfb\u7edf\u7c7b\u4f3c, \u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"ATP")," \u8fdb\u884c\u652f\u4ed8\u548c\u7ef4\u62a4\u7f51\u7edc, \u4e00\u679a ",(0,r.kt)("inlineCode",{parentName:"p"},"ATP")," \u5206\u4e3a:\n",(0,r.kt)("inlineCode",{parentName:"p"},"mATP/uATP/gVON/mVON/kVON/VON"),", \u5176\u4e2d VON \u662f\u6700\u5c0f\u5355\u4f4d."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u4e3b\u8981\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210: GasLimit(\u9650\u5236)\u548c GasPrice(\u5355\u4ef7). \u5176\u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"GasLimit")," \u662f\u7528\u6237\n\u613f\u610f\u4e3a\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c\u6216\u786e\u8ba4\u4ea4\u6613\u652f\u4ed8\u7684\u6700\u5927 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u6d88\u8017\u91cf(\u6700\u5c11 21,000). GasPrice \u662f\n",(0,r.kt)("inlineCode",{parentName:"p"},"VON")," \u7684\u6570\u91cf, \u7528\u4e8e\u613f\u610f\u4e3a\u6bcf\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u6240\u652f\u4ed8\u7684\u5355\u4ef7."),(0,r.kt)("p",null,"\u7528\u6237\u53d1\u9001\u4e00\u7b14\u4ea4\u6613\u65f6, \u4f1a\u8bbe\u5b9a ",(0,r.kt)("inlineCode",{parentName:"p"},"GasLimit")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"GasPrice"),", \u4e8c\u8005\u7684\u4e58\u79ef(GasLimit ","*","\nGasPrice)\u662f\u7528\u6237\u7684\u4ea4\u6613\u6210\u672c, \u540c\u65f6\u8be5\u6210\u672c\u4f1a\u4f5c\u4e3a\u4f63\u91d1\u5956\u52b1\u7ed9\u65f7\u5de5."),(0,r.kt)("p",null,"\u4ea4\u6613\u8bbe\u7f6e\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"GasPrice")," \u8d8a\u9ad8, \u5219\u4ea4\u6613\u7684\u6267\u884c\u4f18\u5148\u7ea7\u66f4\u9ad8, \u4ea4\u6613\u6210\u672c\u4e5f\u4f1a\u66f4\u5927. \u6bcf\u7b14\u4ea4\u6613\u5728\n\u5b8c\u6210\u540e, \u5269\u4f59\u672a\u4f7f\u7528\u7684 Gas \u90fd\u4f1a\u9000\u56de\u5230\u53d1\u9001\u8005\u7684\u5730\u5740\u8d26\u6237\u4e2d. \u6709\u4e00\u70b9\u8981\u7279\u522b\u6ce8\u610f, \u5982\u679c\u56e0\u4e3a\n",(0,r.kt)("inlineCode",{parentName:"p"},"GasLimit")," \u8bbe\u7f6e\u8fc7\u4f4e\u5bfc\u81f4\u4ea4\u6613\u6267\u884c\u5931\u8d25, \u6b64\u65f6\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u4e0d\u4f1a\u88ab\u56de\u9000\u5230\u7528\u6237\u5730\u5740, \u7528\u6237\u4f9d\u7136\n\u9700\u8981\u4e3a\u8fd9\u6b21\u5931\u8d25\u7684\u4ea4\u6613\u652f\u4ed8\u80fd\u91cf\u6210\u672c. \u56e0\u6b64, \u65e0\u8bba\u4ea4\u6613\u662f\u5426\u6267\u884c\u6210\u529f, \u4ea4\u6613\u53d1\u9001\u8005\u90fd\u9700\u8981\u5411\u65f7\u5de5\u652f\u4ed8\u4e00\u5b9a\u7684\u8ba1\u7b97\u8d39\u7528."),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u4e2d, \u9ed8\u8ba4\u6700\u9ad8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u7684\u9650\u5236\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"100,800,000"),", \u6700\u4f4e\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"22,000"),", \u8fc7\u4f4e\u6216\u8005\u8fc7\u9ad8\u90fd\u4f1a\u5bfc\n\u81f4\u4ea4\u6613\u5931\u8d25. \u5728\u90e8\u7f72\u5927\u578b\u5408\u7ea6\u6216\u8005\u8fd0\u884c\u590d\u6742\u529f\u80fd\u65f6, \u53ef\u4ee5\u5c06 Gas \u7684\u9650\u5236\u8c03\u9ad8, \u4f8b\u5982:\n",(0,r.kt)("inlineCode",{parentName:"p"},"1,000,000"),". \u5982\u679c\u662f\u666e\u901a\u8f6c\u8d26\u5219\u8bbe\u7f6e\u4e3a\u6700\u4f4e\u503c\u5373\u53ef. \u5177\u4f53\u7684\u503c\u9700\u8981\u6839\u636e\u5408\u7ea6\u7684\u89c4\u6a21\u53ca\u590d\u6742\u5ea6\n\u8fdb\u884c\u4f30\u7b97, \u5728\u5408\u7ea6\u53d1\u5e03\u524d\u53ef\u4ee5\u8c03\u7528\u63a5\u53e3 ",(0,r.kt)("inlineCode",{parentName:"p"},"platon_estimateGas")," \u8fdb\u884c\u5927\u6982\u4f30\u7b97, \u907f\u514d\u56e0\u4e0d\u8db3\u800c\u5bfc\u81f4\u5931\u8d25."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ATP \u5355\u4f4d\u8f6c\u6362")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5355\u4f4d"),(0,r.kt)("th",{parentName:"tr",align:null},"VON \u503c"),(0,r.kt)("th",{parentName:"tr",align:null},"VON"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"kVON"),(0,r.kt)("td",{parentName:"tr",align:null},"1e3 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mVON"),(0,r.kt)("td",{parentName:"tr",align:null},"1e6 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gVON"),(0,r.kt)("td",{parentName:"tr",align:null},"1e9 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"microATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e12 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"milliATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e15 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e18 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"kATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e21 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e24 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000,000,000,000,000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gATP"),(0,r.kt)("td",{parentName:"tr",align:null},"1e27 VON"),(0,r.kt)("td",{parentName:"tr",align:null},"1,000,000,000,000,000,000,000,000,000")))),(0,r.kt)("h3",{id:"\u907f\u514d\u8d85\u65f6"},"\u907f\u514d\u8d85\u65f6"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u4e0a\u53d1\u9001\u4ea4\u6613, \u6ca1\u6709\u8d85\u65f6\u7684\u6982\u5ff5, \u4f46\u662f\u6700\u7ec8\u4f1a\u6839\u636e\u6240\u8bbe\u7f6e\u7684 Gas \u9650\u5236\u503c\u505c\n\u6b62, \u5982\u679c\u9650\u5236\u503c\u4f4e\u4e8e\u5408\u7ea6\u90e8\u7f72\u6240\u9700\u8981\u7684\u6d88\u8017, \u5219\u4ea4\u6613\u53d1\u9001\u5931\u8d25, \u540c\u65f6\u4f1a\u6263\u9664\u5bf9\u5e94\u7684\u624b\u7eed\u8d39.\n\u624b\u7eed\u8d39\u7684\u8bbe\u5b9a\u4e0d\u53ef\u80fd\u65e0\u9650\u5927, \u56e0\u4e3a\u5728\u7f51\u7edc\u4e2d, \u533a\u5757\u672c\u8eab\u6709\u4e00\u4e2a\u6700\u5927\u7684 Gas \u4e0a\u9650, \u5f53\u4ea4\u6613\u7684\n",(0,r.kt)("inlineCode",{parentName:"p"},"GasLimit")," \u8d85\u8fc7\u8be5\u503c\u65f6, \u4ea4\u6613\u5c06\u65e0\u6cd5\u88ab\u63a5\u6536."),(0,r.kt)("p",null,"\u5982\u679c\u662f\u9488\u5bf9\u5df2\u53d1\u5e03\u7684\u5408\u7ea6\u6267\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"call")," \u8c03\u7528(call \u8c03\u7528\u6307\u5408\u7ea6\u903b\u8f91\u5185\u65e0\u72b6\u6001\u53d8\u66f4\u64cd\u4f5c), \u5b58\u5728\n",(0,r.kt)("inlineCode",{parentName:"p"},"5s")," \u8d85\u65f6\u7684\u9650\u5236, \u5982\u679c\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"5s")," \u5185\u5408\u7ea6\u903b\u8f91\u6ca1\u6709\u6267\u884c\u5b8c\u6210, \u865a\u62df\u673a\u4f1a\u8d85\u65f6\u5f3a\u5236\u9000\u51fa, \u5bfc\u81f4\u67e5\u8be2\u5931\u8d25."),(0,r.kt)("p",null,"\u4e3a\u907f\u514d\u90e8\u7f72\u5408\u7ea6\u4ea4\u6613\u5931\u8d25, \u8bf7\u5c1d\u8bd5\u5c06\u5927\u578b\u5408\u7ea6\u5206\u6210\u8f83\u5c0f\u7684\u5757, \u5e76\u6839\u636e\u9700\u8981\u76f8\u4e92\u5f15\u7528. \u4e3a\u4e86\u907f\n\u514d\u65e0\u9650\u5faa\u73af, \u8bf7\u6ce8\u610f\u5e38\u89c1\u7684\u9677\u9631\u548c\u9012\u5f52\u8c03\u7528."),(0,r.kt)("h3",{id:"\u975e\u6cd5\u64cd\u4f5c\u5904\u7f5a"},"\u975e\u6cd5\u64cd\u4f5c\u5904\u7f5a"),(0,r.kt)("p",null,"\u5982\u679c\u667a\u80fd\u5408\u7ea6\u4e0d\u662f\u901a\u8fc7\u6807\u51c6\u6709\u6548\u7684\u7f16\u8bd1\u5668\u7f16\u8bd1\u5408\u7ea6\u6216\u8005\u968f\u610f\u7684\u66f4\u6539\u6307\u4ee4\u7801, \u90fd\u4f1a\u5bfc\u81f4\u64cd\u4f5c\u7801\n\u65e0\u6548. \u6b64\u7c7b\u5408\u7ea6\u4e0d\u4ec5\u65e0\u6cd5\u90e8\u7f72\u548c\u6267\u884c\u6210\u529f, \u800c\u4e14\u8fd8\u4f1a\u4ea7\u751f ",(0,r.kt)("inlineCode",{parentName:"p"},"GasLimit*GasPrice")," \u7684\u5168\u989d\u60e9\n\u7f5a, \u5f53\u6b21\u4ea4\u6613\u7684\u624b\u7eed\u8d39\u4f1a\u5168\u90e8\u88ab\u6263\u9664, \u8fd9\u662f\u4e00\u4e2a\u529b\u5ea6\u5f88\u5927\u7684\u60e9\u7f5a, \u5982\u679c\u64cd\u4f5c\u8005\u6ca1\u6ce8\u610f\u8be5\u70b9,\n\u4e0d\u65ad\u91cd\u8bd5, \u90a3\u4e48\u4ed8\u51fa\u7684\u6210\u672c\u4f1a\u66f4\u9ad8, \u4ee3\u4ef7\u66f4\u91cd."),(0,r.kt)("p",null,"\u4e00\u822c\u4ea7\u751f\u65e0\u6548\u64cd\u4f5c\u7801\u6709\u4ee5\u4e0b\u60c5\u51b5:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5bf9\u6b63\u5e38\u5df2\u7f16\u8bd1\u51fa\u7684\u5408\u7ea6\u624b\u52a8\u66f4\u6539\u4e86\u6307\u4ee4\u7801"),(0,r.kt)("li",{parentName:"ol"},"\u5408\u7ea6\u7f16\u8bd1\u5668\u7248\u672c\u4e0e\u7f51\u7edc\u9501\u652f\u6301\u7684\u5408\u7ea6\u7248\u672c\u4e0d\u4e00\u81f4"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u6d6e\u70b9\u6570\u8fd0\u7b97")),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u7f51\u7edc\u4e2d\u64cd\u4f5c\u5408\u7ea6\u65f6, \u8bf7\u52a1\u5fc5\u5148\u786e\u8ba4\u5f53\u524d\u7f51\u7edc\u6240\u652f\u6301\u7684\u667a\u80fd\u5408\u7ea6\u7248\u672c, \u7136\u540e\u9009\u62e9\u5bf9\u5e94\u7248\u672c\u5bf9\u7684\u7f16\u8bd1\u5668."),(0,r.kt)("p",null,"\u5e38\u89c4\u64cd\u4f5c\u662f\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Alaya")," \u5b98\u65b9\u63d0\u4f9b\u7684\u6700\u65b0\u7684 Truffle/PlatON-CDT \u6765\u7f16\u8bd1/\u90e8\u7f72/\u6267\u884c\u5408\u7ea6,\n\u540c\u65f6\u5728\u5207\u6362\u5230\u4e3b\u7f51\u64cd\u4f5c\u524d, \u52a1\u5fc5\u5728\u5f00\u53d1\u6d4b\u8bd5\u7f51\u8fdb\u884c\u6709\u6548\u7684\u9a8c\u8bc1."),(0,r.kt)("h3",{id:"cc\u8bed\u8a00\u9650\u5236"},"C/C++\u8bed\u8a00\u9650\u5236"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"C/C++\u4e0d\u652f\u6301\u7684\u7279\u6027")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6d6e\u70b9\u6570(float/double)"),(0,r.kt)("li",{parentName:"ul"},"typeid/dynamic_cast(-fno-rtti)"),(0,r.kt)("li",{parentName:"ul"},"try-catch(-fno-exeception)"),(0,r.kt)("li",{parentName:"ul"},"C++17 \u4e4b\u540e\u7684\u7279\u6027")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libc \u4e0d\u652f\u6301\u7684\u5934\u6587\u4ef6")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"signal.h"),(0,r.kt)("li",{parentName:"ul"},"math.h"),(0,r.kt)("li",{parentName:"ul"},"locale.h"),(0,r.kt)("li",{parentName:"ul"},"errno.h"),(0,r.kt)("li",{parentName:"ul"},"uchar.h"),(0,r.kt)("li",{parentName:"ul"},"time.h")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"libc++\u4e0d\u652f\u6301\u7684\u5934\u6587\u4ef6")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"rand"),(0,r.kt)("li",{parentName:"ul"},"atomics"),(0,r.kt)("li",{parentName:"ul"},"thread"),(0,r.kt)("li",{parentName:"ul"},"random")),(0,r.kt)("h3",{id:"\u7f16\u7a0b\u89c4\u8303"},"\u7f16\u7a0b\u89c4\u8303"),(0,r.kt)("h4",{id:"\u547d\u540d\u89c4\u8303"},"\u547d\u540d\u89c4\u8303"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u51fd\u6570\u547d\u540d, \u53d8\u91cf\u547d\u540d, \u6587\u4ef6\u547d\u540d\u8981\u6709\u63cf\u8ff0\u6027")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u91c7\u7528\u533a\u5757\u94fe\u884c\u4e1a\u5185\u7684\u672f\u8bed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5c3d\u53ef\u80fd\u5c11\u7684\u4f7f\u7528\u7f29\u5199, \u5982\u679c\u4e00\u5b9a\u4f7f\u7528, \u5219\u63a8\u8350\u4f7f\u7528\u516c\u5171\u7f29\u5199\u548c\u4e60\u60ef\u7f29\u5199\u7b49")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6587\u4ef6\u540d\u8981\u5168\u90e8\u5c0f\u5199, \u53ef\u4ee5\u5305\u542b\u4e0b\u5212\u7ebf(",(0,r.kt)("inlineCode",{parentName:"p"},"_"),")\u6216\u8fde\u5b57\u7b26(",(0,r.kt)("inlineCode",{parentName:"p"},"-"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"WASM \u667a\u80fd\u5408\u7ea6, \u6587\u4ef6\u540d\u4e0e\u5408\u7ea6\u540d\u4fdd\u6301\u4e00\u81f4")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7c7b\u578b\u540d\u79f0\u7684\u6bcf\u4e2a\u9996\u5b57\u6bcd\u5747\u5927\u5199, \u4e0d\u5305\u542b\u4e0b\u5212\u7ebf: ",(0,r.kt)("inlineCode",{parentName:"p"},"MyExcitingClass"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MyExcitingEnum"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53d8\u91cf(\u5305\u62ec\u51fd\u6570\u53c2\u6570)\u548c\u6570\u636e\u6210\u5458\u4e00\u5f8b\u5c0f\u5199, \u5355\u8bcd\u4e4b\u95f4\u7528\u4e0b\u5212\u7ebf\u8fde\u63a5. \u7c7b\u7684\u6210\u5458\u53d8\u91cf\u4ee5\u4e0b\u5212\n\u7ebf\u7ed3\u5c3e, \u4f46\u7ed3\u6784\u4f53\u7684\u5c31\u4e0d\u7528, \u5982: ",(0,r.kt)("inlineCode",{parentName:"p"},"a_local_variable"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"a_struct_data_member"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"a_class_data_memeber_"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u58f0\u660e\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"constexpr")," \u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"const"),' \u7684\u5e38\u91cf, \u6216\u5728\u5408\u7ea6\u6267\u884c\u8fc7\u7a0b\u4e2d\u5176\u503c\u59cb\u7ec8\u4fdd\u6301\u4e0d\u53d8\u7684, \u547d\n\u540d\u65f6\u4ee5 "k" \u5f00\u5934, \u5927\u5c0f\u5199\u6df7\u5408. \u4f8b\u5982:'),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"const int kDaysInAWeek = 7;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5e38\u89c4\u51fd\u6570\u4f7f\u7528\u5927\u5c0f\u5199\u6df7\u5408, \u53d6\u503c\u548c\u8bbe\u503c\u51fd\u6570\u5219\u8981\u6c42\u4e0e\u53d8\u91cf\u540d\u5339\u914d:\n",(0,r.kt)("inlineCode",{parentName:"p"},"MyExcitingFunctio()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MyExcitingMethod()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"my_exciting_member_variable()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"set_my_exciting_member_variable()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u679a\u4e3e\u7684\u547d\u540d\u5e94\u8be5\u548c\u5e38\u91cf\u6216\u5b8f\u4e00\u81f4: ",(0,r.kt)("inlineCode",{parentName:"p"},"kEnumName")," \u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"ENUM_NAME"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u4f60\u7684\u547d\u540d\u5b9e\u4f53\u4e0e\u5df2\u6709\u7684 C/C++\u5b9e\u4f53\u76f8\u4f3c, \u53ef\u53c2\u8003\u73b0\u6709\u547d\u540d\u7b56\u7565"))),(0,r.kt)("h4",{id:"\u667a\u80fd\u5408\u7ea6\u6587\u4ef6\u7ec4\u7ec7"},"\u667a\u80fd\u5408\u7ea6\u6587\u4ef6\u7ec4\u7ec7"),(0,r.kt)("p",null,"\u6587\u4ef6\u7ec4\u7ec7\u89c4\u5219:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e00\u822c\u8d85\u8fc7 1000 \u884c\u7684\u7a0b\u5e8f\u4ee3\u7801\u5c31\u6bd4\u8f83\u96be\u4ee5\u9605\u8bfb, \u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u4e00\u4e2a\u6587\u4ef6\u5185\u4ee3\u7801\u884c\u6570\u8fc7\u957f\u7684\u60c5\n\u51b5. \u6bcf\u4e2a\u5408\u7ea6\u6587\u4ef6\u5e94\u53ea\u5305\u542b\u4e00\u4e2a\u5355\u4e00\u7684\u5408\u7ea6\u7c7b\u6216\u5408\u7ea6\u63a5\u53e3.")),(0,r.kt)("p",null,"\u6587\u4ef6\u7ec4\u7ec7\u987a\u5e8f:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6587\u4ef6\u6ce8\u91ca: \u6240\u6709\u5408\u7ea6\u6e90\u6587\u4ef6\u5728\u5f00\u5934\u6709\u4e00\u4e2a\u6ce8\u91ca, \u5176\u4e2d\u5217\u51fa\u6587\u4ef6\u7684\u7248\u6743\u58f0\u660e, \u6587\u4ef6\u540d, \u529f\u80fd\n\u63cf\u8ff0\u53ca\u521b\u5efa, \u4fee\u6539\u8bb0\u5f55."),(0,r.kt)("li",{parentName:"ul"},"\u7c7b\u6216\u63a5\u53e3\u6ce8\u91ca: \u5728\u7c7b/\u63a5\u53e3\u5b9a\u4e49\u4e4b\u524d\u5e94\u8be5\u8fdb\u884c\u6ce8\u91ca, \u5305\u62ec\u7c7b/\u63a5\u53e3\u7684\u63cf\u8ff0, \u6700\u65b0\u4fee\u6539\u8005, \u7248\n\u672c\u53f7, \u53c2\u8003\u94fe\u63a5\u7b49."),(0,r.kt)("li",{parentName:"ul"},"\u7c7b\u6210\u5458: \u9996\u5148\u662f\u516c\u5171\u7ea7\u522b\u7684, \u968f\u540e\u662f\u4fdd\u62a4\u7ea7\u522b\u7684, \u6700\u540e\u662f\u79c1\u6709\u7ea7\u522b."),(0,r.kt)("li",{parentName:"ul"},"\u6210\u5458\u51fd\u6570\uff1a\u5408\u7ea6\u5185\u7684\u51fd\u6570\u5e94\u8be5\u6309\u529f\u80fd\u5206\u7ec4, \u800c\u4e0d\u5e94\u8be5\u6309\u4f5c\u7528\u57df\u6216\u8bbf\u95ee\u6743\u9650\u8fdb\u884c\u5206\u7ec4.")),(0,r.kt)("h4",{id:"\u7279\u6027\u4f7f\u7528\u5efa\u8bae"},"\u7279\u6027\u4f7f\u7528\u5efa\u8bae"),(0,r.kt)("h5",{id:"\u7ed3\u6784\u4f53-vs-\u7c7b"},"\u7ed3\u6784\u4f53 vs. \u7c7b"),(0,r.kt)("p",null,"\u4ec5\u5f53\u53ea\u6709\u6570\u636e\u6210\u5458\u65f6\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"struct"),", \u5176\u4ed6\u4e00\u6982\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"class"),"."),(0,r.kt)("p",null,"\u5728 C++ \u4e2d ",(0,r.kt)("inlineCode",{parentName:"p"},"struct")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," \u5173\u952e\u5b57\u51e0\u4e4e\u542b\u4e49\u4e00\u6837. \u6211\u4eec\u4e3a\u8fd9\u4e24\u4e2a\u5173\u952e\u5b57\u6dfb\u52a0\u6211\u4eec\u81ea\n\u5df1\u7684\u8bed\u4e49\u7406\u89e3, \u4ee5\u4fbf\u4e3a\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\u9009\u62e9\u5408\u9002\u7684\u5173\u952e\u5b57."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"struct")," \u7528\u6765\u5b9a\u4e49\u5305\u542b\u6570\u636e\u7684\u88ab\u52a8\u5f0f\u5bf9\u8c61, \u4e5f\u53ef\u4ee5\u5305\u542b\u76f8\u5173\u7684\u5e38\u91cf, \u4f46\u9664\u4e86\u5b58\u53d6\u6570\u636e\u6210\u5458\n\u4e4b\u5916, \u6ca1\u6709\u522b\u7684\u51fd\u6570\u529f\u80fd. \u5e76\u4e14\u5b58\u53d6\u529f\u80fd\u662f\u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u4f4d\u57df, \u800c\u975e\u51fd\u6570\u8c03\u7528. \u9664\u4e86\u6784\u9020\u51fd\n\u6570, \u6790\u6784\u51fd\u6570, ",(0,r.kt)("inlineCode",{parentName:"p"},"Initialize()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Reset()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Validate()")," \u7b49\u7c7b\u4f3c\u7684\u7528\u4e8e\u8bbe\u5b9a\u6570\u636e\u6210\u5458\u7684\n\u51fd\u6570\u5916, \u4e0d\u80fd\u63d0\u4f9b\u5176\u5b83\u529f\u80fd\u7684\u51fd\u6570."),(0,r.kt)("p",null,"\u5982\u679c\u9700\u8981\u66f4\u591a\u7684\u51fd\u6570\u529f\u80fd, ",(0,r.kt)("inlineCode",{parentName:"p"},"class")," \u66f4\u9002\u5408. \u5982\u679c\u62ff\u4e0d\u51c6, \u5c31\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"class"),"."),(0,r.kt)("h5",{id:"\u7ee7\u627f"},"\u7ee7\u627f"),(0,r.kt)("p",null,"\u4f7f\u7528\u7ec4\u5408\u5e38\u5e38\u6bd4\u4f7f\u7528\u7ee7\u627f\u66f4\u5408\u7406. \u5982\u679c\u4f7f\u7528\u7ee7\u627f\u7684\u8bdd, \u5b9a\u4e49\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," \u7ee7\u627f."),(0,r.kt)("p",null,"\u6240\u6709\u7ee7\u627f\u5fc5\u987b\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," \u7684. \u5982\u679c\u4f60\u60f3\u4f7f\u7528\u79c1\u6709\u7ee7\u627f, \u4f60\u5e94\u8be5\u66ff\u6362\u6210\u628a\u57fa\u7c7b\u7684\u5b9e\u4f8b\u4f5c\u4e3a\u6210\u5458\u5bf9\u8c61\u7684\u65b9\u5f0f."),(0,r.kt)("p",null,'\u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\u5b9e\u73b0\u7ee7\u627f. \u7ec4\u5408\u5e38\u5e38\u66f4\u5408\u9002\u4e00\u4e9b. \u5c3d\u91cf\u505a\u5230\u53ea\u5728 "is-a" \u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u7ee7\u627f:\n\u5982\u679c Bar \u7684\u786e "\u662f\u4e00\u79cd" Foo, Bar \u624d\u80fd\u7ee7\u627f Foo.'),(0,r.kt)("h5",{id:"\u591a\u91cd\u7ee7\u627f"},"\u591a\u91cd\u7ee7\u627f"),(0,r.kt)("p",null,'\u591a\u91cd\u7ee7\u627f\u5c24\u5176\u6210\u95ee\u9898\uff0c\u56e0\u4e3a\u5b83\u901a\u5e38\u4f1a\u5e26\u6765\u66f4\u9ad8\u7684\u6027\u80fd\u5f00\u9500 (\u5b9e\u9645\u4e0a, \u4ece\u5355\u7ee7\u627f\u5230\u591a\u91cd\u7ee7\u627f\u7684\n\u6027\u80fd\u4e0b\u964d\u901a\u5e38\u53ef\u80fd\u5927\u4e8e\u4ece\u666e\u901a\u6d3e\u53d1\u5230\u865a\u62df\u8c03\u5ea6\u7684\u6027\u80fd\u4e0b\u964d), \u5e76\u4e14\u7531\u4e8e\u5b58\u5728\u5bfc\u81f4 "diamond" \u7684\u98ce\n\u9669\u201d\u7684\u7ee7\u627f\u6a21\u5f0f\uff0c\u5bb9\u6613\u4ea7\u751f\u6b67\u4e49\uff0c\u6df7\u6dc6\u548c\u5f7b\u5e95\u7684\u9519\u8bef\u3002'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5f3a\u70c8\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u591a\u91cd\u7ee7\u627f.")),(0,r.kt)("h5",{id:"move"},"move"),(0,r.kt)("p",null,"C++11 \u5f15\u5165\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"std::move"),", \u80fd\u6709\u6548\u7684\u628a\u8d44\u6e90\u8f6c\u79fb\u7ed9\u5176\u4ed6\u5bf9\u8c61. \u5728\u6211\u4eec\u7684\u5b9e\u8df5\u4e2d, \u4f7f\u7528\n",(0,r.kt)("inlineCode",{parentName:"p"},"std::move")," \u80fd\u6709\u6548\u51cf\u5c11 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u7684\u6d88\u8017, \u7279\u522b\u662f\u4f7f\u7528\u5bb9\u5668\u7684\u65f6\u5019. \u5728\u8fd4\u56de\u503c\u65f6, \u5e94\u5f53\u8fd4\u56de\n\u53f3\u503c\u5f15\u7528\u5e76\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"std::move")," \u5c06\u5de6\u503c\u5f15\u7528\u8f6c\u6362\u4e3a\u53f3\u503c\u5f15\u7528, \u4ee5\u51cf\u5c11 ",(0,r.kt)("inlineCode",{parentName:"p"},"Gas")," \u6d88\u8017. \u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<std::string>&& get_vec() {\n    std::vector<std::string> v;\n    // ignore\n    return std::move(v); // very important\n}\n")),(0,r.kt)("h5",{id:"auto"},"auto"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"auto")," \u5173\u952e\u5b57\u80fd\u591f\u901a\u8fc7\u521d\u59cb\u5316\u5668\u81ea\u52a8\u63a8\u5bfc\u5176\u7c7b\u578b, \u914d\u5408\u5bb9\u5668\uff0c\u8fed\u4ee3\u5668\u4f7f\u7528\u80fd\u7b80\u5316\u4ee3\u7801. \u4f8b\u5982:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::map<std::string, std::string> my_map;\nfor (auto it = my_map.begin(); it != my_map.end(); it++) {\n    // ignore\n}\n")),(0,r.kt)("h5",{id:"\u5f15\u7528\u53c2\u6570"},"\u5f15\u7528\u53c2\u6570"),(0,r.kt)("p",null,"\u5efa\u8bae\u6240\u6709\u51fd\u6570\u53c2\u6570\u90fd\u4f7f\u7528\u5f15\u7528\u53c2\u6570. \u5f15\u7528\u53c2\u6570\u53ef\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u590d\u5236, \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5206\n\u914d\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684 WASM \u865a\u62df\u673a\u6765\u8bf4, \u5185\u5b58\u5206\u914d\u662f\u4e00\u4e2a\u6602\u8d35\u7684\u64cd\u4f5c."),(0,r.kt)("h5",{id:"\u5bb9\u5668"},"\u5bb9\u5668"),(0,r.kt)("p",null,"C++\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u5bb9\u5668(map, vector, list \u7b49\u7b49), \u5728\u4f7f\u7528\u65f6\u5e94\u5f53\u4ed4\u7ec6\u9605\u8bfb\u5bf9\u5e94\u7684\u63a5\u53e3\u6587\u6863. \u7279\u522b\u9700\u8981\u6ce8\u610f\u7684\u662f map \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"operator[]")," \u64cd\u4f5c\u7b26, \u6839\u636e\u63a5\u53e3\u6587\u6863\u8bf4\u660e, ",(0,r.kt)("inlineCode",{parentName:"p"},"operator[]")," \u5f53 key \u4e0d\u5b58\u5728\u65f6, \u4f1a\u6267\u884c\u63d2\u5165\u52a8\u4f5c. \u5bf9\u5e94\u5408\u7ea6\u5f00\u53d1\u6765\u8bf4, \u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageType")," \u5b58\u50a8 map \u65f6, \u4e0d\u8981\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"operator[]")," \u5224\u65ad key \u662f\u5426\u5b58\u5728, \u800c\u5e94\u8be5\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"find()"),"."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"\u533a\u5757-api"},"\u533a\u5757 Api"),(0,r.kt)("h4",{id:"platon_block_hash"},"platon_block_hash()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"h256 platon::platon_block_hash(int64_t num)\n")),(0,r.kt)("p",null,"\u6839\u636e\u533a\u5757\u9ad8\u5ea6\u83b7\u53d6\u533a\u5757\u54c8\u5e0c\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"num\uff1a"),"\u5757\u7684\u9ad8\u5ea6"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u54c8\u5e0c\u503c")))),(0,r.kt)("h4",{id:"platon_block_number"},"platon_block_number()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_block_number()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u5757\u7684\u9ad8\u5ea6\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5f53\u524d\u5757\u7684\u9ad8\u5ea6")))),(0,r.kt)("h4",{id:"platon_coinbase"},"platon_coinbase()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_coinbase()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u77ff\u5de5\u8282\u70b9\u7684\u54c8\u5e0c\u503c\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u77ff\u5de5\u8282\u70b9\u7684\u54c8\u5e0c")))),(0,r.kt)("h4",{id:"platon_unix_timestamp"},"platon_unix_timestamp()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"int64_t platon::platon_unix_timestamp()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u5757\u7684 Unix \u65f6\u95f4\u6233\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5f53\u524d\u5757\u7684 Unix \u65f6\u95f4\u6233\uff08\u79d2\uff09")))),(0,r.kt)("h4",{id:"platon_gas_limit"},"platon_gas_limit()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_gas_limit()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u533a\u5757\u7684 gas limit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5f53\u524d\u533a\u5757\u7684 gas limit")))),(0,r.kt)("h3",{id:"\u4ea4\u6613-api"},"\u4ea4\u6613 API"),(0,r.kt)("h4",{id:"platon_gas_price"},"platon_gas_price()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u128 platon::platon_gas_price()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 gas price."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 gas price")))),(0,r.kt)("h4",{id:"platon_gas"},"platon_gas()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_gas()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 gas \u503c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 gas \u503c")))),(0,r.kt)("h4",{id:"platon_caller_nonce"},"platon_caller_nonce"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"uint64_t platon_caller_nonce()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684 nonce \u503c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u7684 nonce \u503c")))),(0,r.kt)("h4",{id:"platon_call_value"},"platon_call_value()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"u128 platon::platon_call_value()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u5f53\u524d\u4ea4\u6613\u7684 value \u503c\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5f53\u524d\u4ea4\u6613\u7684 value \u503c")))),(0,r.kt)("h4",{id:"platon_caller"},"platon_caller()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_caller()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u53d1\u8d77\u8005"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u53d1\u8d77\u8005\u5730\u5740")))),(0,r.kt)("h4",{id:"platon_origin"},"platon_origin()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_origin()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u539f\u59cb\u53d1\u8d77\u8005"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4ea4\u6613\u539f\u59cb\u53d1\u8d77\u8005\u7684\u5730\u5740")))),(0,r.kt)("h4",{id:"platon_address"},"platon_address()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Address platon::platon_address()\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u4ea4\u6613\u7684\u5408\u7ea6\u5730\u5740"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5408\u7ea6\u5730\u5740")))),(0,r.kt)("h3",{id:"\u5e10\u6237-api"},"\u5e10\u6237 Api"),(0,r.kt)("h4",{id:"make_address-12"},"make_address() 1/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template <size_t M> std::pair<Address, bool> make_address(const char (&str)[M])\n")),(0,r.kt)("p",null,'CDT \u9ed8\u8ba4\u8bc6\u522b\u7684\u5730\u5740\u662f\u4e3b\u7f51\u5730\u5740\u4e5f\u5c31\u662f\u5730\u5740\u524d\u7f00\u4e3a atp\uff0c\u540c\u65f6\u6211\u4eec\u652f\u6301\u4ee5\u592a\u574a\u4ee5\u5730\u5740\u683c\u5f0f,\u4f8b\u5982: "0x02ea8A5273d20f3e378a56D958a684004eDD0094"'),(0,r.kt)("p",null,"\u5c06 C \u98ce\u683c\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5730\u5740\u5bf9\u8c61\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"str\uff1a")," C \u98ce\u683c\u5b57\u7b26\u4e32"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u4e3a pair\uff0cpair \u7684 second \u8868\u793a\u6210\u529f\u6216\u8005\u5931\u8d25\uff0cfirst \u8868\u793a Address \u7c7b\u578b\u7684\u5730\u5740\u3002")))),(0,r.kt)("h4",{id:"make_address-22"},"make_address() 2/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::pair<Address, bool> make_address(const std::string &str_address)\n")),(0,r.kt)("p",null,'CDT \u9ed8\u8ba4\u8bc6\u522b\u7684\u5730\u5740\u662f\u4e3b\u7f51\u5730\u5740\u4e5f\u5c31\u662f\u5730\u5740\u524d\u7f00\u4e3a atp\uff0c\u540c\u65f6\u6211\u4eec\u652f\u6301\u4ee5\u592a\u574a\u4ee5\u5730\u5740\u683c\u5f0f,\u4f8b\u5982: "0x02ea8A5273d20f3e378a56D958a684004eDD0094"'),(0,r.kt)("p",null,"\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5730\u5740\u5bf9\u8c61\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"str\uff1a")," \u5b57\u7b26\u4e32"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u503c\u4e3a pair\uff0cpair \u7684 second \u8868\u793a\u6210\u529f\u6216\u8005\u5931\u8d25\uff0cfirst \u8868\u793a Address \u7c7b\u578b\u7684\u5730\u5740")))),(0,r.kt)("h4",{id:"platon_balance"},"platon_balance()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Energon platon::platon_balance(const Address & addr)\n")),(0,r.kt)("p",null,"\u6839\u636e\u5730\u5740\u83b7\u53d6\u4f59\u989d\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5730\u5740"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5730\u5740\u4f59\u989d")))),(0,r.kt)("h4",{id:"platon_transfer"},"platon_transfer()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool platon::platon_transfer(const Address &addr, const Energon &amount)\n")),(0,r.kt)("p",null,"\u5c06 Energon \u7684\u91d1\u989d\u8f6c\u79fb\u5230\u5730\u5740\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"amount\uff1a"),"Energon \u7684\u6570\u91cf"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u4f20\u8f93\u6210\u529f\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false")))),(0,r.kt)("h4",{id:"platonenergon-class"},"platon::Energon Class"),(0,r.kt)("p",null,"Energo \u662f\u8d27\u5e01\u76f8\u5173\u64cd\u4f5c\u7c7b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon (u128 n)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684 Energon\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const u128 Get () const"),"\n\u83b7\u5f97\u4e00\u5b9a\u91cf\u7684 Von\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const bytes Bytes () const"),"\n\u83b7\u53d6\u503c\u7684\u5b57\u8282\uff0c\u5b57\u8282\u4f7f\u7528\u5927\u7aef\u8868\u793a\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon & Add (const u128 &v)"),"\n\u6dfb\u52a0\u91cf\u7684 Von\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon & Add (const Energon &rhs)"),"\n\u4e24\u4e2a Energon \u5bf9\u8c61\u76f8\u52a0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon & operator+= (const Energon &rhs)"),"\n\u5b9e\u73b0\u8fd0\u7b97\u7b26+ =")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"platon::Energon::Energon(u128 n)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684 Energon\u3002",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n\uff1a")," Von \u6570\u91cf"))))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::Add(const Energon & rhs)"),"\n\u6dfb\u52a0\u91cf\u7684 Von\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rhs\uff1a"),"Von \u7684\u6570\u91cf"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Energon \u7684\u5f15\u7528"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::Add(const u128 & v)"),"\n\u6dfb\u52a0\u91cf\u7684 Von\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"Von \u7684\u6570\u91cf"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Energon \u7684\u5f15\u7528"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const bytes platon::Energon::Bytes() const"),"\n\xa0\xa0\xa0\xa0 \u83b7\u53d6\u503c\u7684\u5b57\u8282\uff0c\u5b57\u8282\u4f7f\u7528\u5927\u7aef\u8868\u793a\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u503c\u7684\u5b57\u8282"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const u128 platon::Energon::Get() const"),"\n\xa0\xa0\xa0\xa0 \u83b7\u5f97\u4e00\u5b9a\u91cf\u7684 Von\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Von \u91cf"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Energon& platon::Energon::operator+= ( const Energon & rhs)"),"\n\xa0\xa0\xa0\xa0 \u5b9e\u73b0\u8fd0\u7b97\u7b26+ ="),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rhs\uff1a"),"Energon \u5bf9\u8c61"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Energon \u7684\u5f15\u7528")))))))),(0,r.kt)("h4",{id:"platonwhitelist-tablename--class"},"platon::WhiteList< TableName > Class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName>\nclass platon::WhiteList< TableName >\n")),(0,r.kt)("p",null,"\u6301\u4e45\u5b58\u50a8\u767d\u540d\u5355\u5de5\u5177\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6a21\u677f\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Name\uff1a"),"\u767d\u540d\u5355\u540d\u79f0\uff0c\u5728\u540c\u4e00\u5408\u7ea6\u4e2d\uff0c\u8be5\u540d\u79f0\u5e94\u552f\u4e00"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"template<Name::Raw TableName> platon::WhiteList< TableName >::WhiteList ()"))))),(0,r.kt)("p",null,"\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6e05\u5355\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"WhiteList ()"),"\n\xa0\xa0\xa0\xa0 \u6784\u9020\u4e00\u4e2a\u65b0\u7684\u6e05\u5355\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void Add (const std::string &addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void Add (const Address &addr)"),"\n\u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void Delete (const std::string &addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void Delete (const Address &addr)"),"\n\u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"bool Exists (const std::string &addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"bool Exists (const Address &addr)"),"\n\u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> void platon::WhiteList< TableName >::Add ( const Address & addr)"),"\n\xa0\xa0\xa0\xa0 \u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> void platon::WhiteList< TableName >::Add ( const std::string & addr)"),"\n\xa0\xa0\xa0\xa0 \u5c06\u5730\u5740\u6dfb\u52a0\u5230\u767d\u540d\u5355\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> void platon::WhiteList< TableName >::Delete ( const Address & addr)"),"\n\xa0\xa0 \u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> void platon::WhiteList< TableName >::Delete ( const std::string & addr)"),"\n\xa0\xa0 \u4ece\u767d\u540d\u5355\u4e2d\u5220\u9664\u5730\u5740\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> bool platon::WhiteList< TableName >::Exists ( const Address & addr)"),"\n\xa0\xa0 \u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName> bool platon::WhiteList< TableName >::Exists ( const std::string & addr)"),"\n\xa0\xa0 \u8be5\u5730\u5740\u662f\u5426\u5b58\u5728\u4e8e\u767d\u540d\u5355\u4e2d\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5e10\u6237\u5730\u5740"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u5b58\u5728\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false")))))))),(0,r.kt)("h3",{id:"\u5b58\u50a8-api"},"\u5b58\u50a8 API"),(0,r.kt)("h4",{id:"platon_set_state"},"platon_set_state()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_set_state(const uint8_t *key, size_t klen, const uint8_t *value, size_t vlen)\n")),(0,r.kt)("p",null,"\u8bbe\u7f6e\u72b6\u6001\u5bf9\u8c61"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u952e\u7684\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u503c"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vlen\uff1a"),"\u503c\u7684\u957f\u5ea6")))),(0,r.kt)("h4",{id:"platon_get_state_length"},"platon_get_state_length()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"size_t platon_get_state_length(const uint8_t *key, size_t klen)\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\u7684\u957f\u5ea6"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u952e\u7684\u957f\u5ea6"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u952e\u5bf9\u5e94\u7684\u503c\u7684\u957f\u5ea6")))),(0,r.kt)("h4",{id:"platon_get_state"},"platon_get_state()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"size_t platon_get_state(const uint8_t *key, size_t klen, uint8_t *value, size_t vlen);\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u72b6\u6001\u5bf9\u8c61"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key\uff1a"),"\u952e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Klen\uff1a"),"\u5bc6\u94a5\u7684\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u503c"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"vlen\uff1a"),"\u4ef7\u503c\u7684\u957f\u5ea6"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u503c\u7684\u957f\u5ea6")))),(0,r.kt)("h4",{id:"platonstoragetype-storagename-t--\u6a21\u677f\u7c7b"},"platon::StorageType< StorageName, T > \u6a21\u677f\u7c7b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw StorageName, typename T>\nclass platon::StorageType< StorageName, T >\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6a21\u677f\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"StorageName\uff1a"),"\u5143\u7d20\u503c\u540d\u79f0\uff0c\u5728\u540c\u4e00\u5408\u7ea6\u4e2d\uff0c\u8be5\u540d\u79f0\u5fc5\u987b\u552f\u4e00"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T\uff1a"),"\u5143\u7d20\u7c7b\u578b"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StorageType ()"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StorageType (const T &d)"),"\n\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StorageType (const StorageType< StorageName, T > &)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StorageType (const StorageType< StorageName, T > &&)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"~StorageType ()"),"\n\u9500\u6bc1\u5b58\u50a8\u7c7b\u578b\u5bf9\u8c61\u3002\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator= (const T &t)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator== (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator!= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator< (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator>= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator<= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> bool operator> (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator^= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator^ (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator|= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator| (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator&= (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T operator& (const P &t) const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T operator~ () const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator<< (int offset)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator>> (int offset)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator++ ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T operator++ (int)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator[] (int i)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator+= (const P &p)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<typename P> T & operator-= (const P &p)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & operator* ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T * operator-> ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"operator bool () const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T get () const"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"T & self ()")))))),(0,r.kt)("h4",{id:"platondbarray-tablename-key-n--\u6a21\u677f\u7c7b"},"platon::db::Array< TableName, Key, N > \u6a21\u677f\u7c7b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName, typename Key, unsigned N>\nclass platon::db::Array< TableName, Key, N >\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u7c7b")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"class const_iterator Constant iterator."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"class const_reverse_iterator Constant reverse iterator."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"class iterator Iterator."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Public Types")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"typedef std::reverse_iterator< iterator > reverse_iterator")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array (const Array< TableName, Key, N > &)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array (const Array< TableName, Key, N > &&)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Array< TableName, Key, N > & operator= (const Array< TableName, Key, N > &)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"~Array ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"iterator begin ()"),"\n\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"iterator end ()"),"\n\u8fed\u4ee3\u5668\u7ed3\u675f\u4f4d\u7f6e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"reverse_iterator rbegin ()"),"\n\u53cd\u5411\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"reverse_iterator rend ()"),"\n\u53cd\u5411\u8fed\u4ee3\u5668\u7ed3\u675f\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const_iterator cbegin ()"),"\n\u5e38\u91cf\u8fed\u4ee3\u5668\u5f00\u59cb\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const_iterator cend ()"),"\n\u5e38\u91cf\u8fed\u4ee3\u5668\u6700\u7ec8\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const_reverse_iterator crbegin ()"),"\n\u5e38\u6570\u53cd\u5411\u8fed\u4ee3\u5668\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"const_reverse_iterator crend ()"),"\n\u5e38\u6570\u53cd\u5411\u8fed\u4ee3\u5668\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Key & at (size_t pos)"),"\n\u83b7\u53d6\u6307\u5b9a\u7684 position \u5143\u7d20\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Key & operator[] (size_t pos)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"size_t size ()"),"\n\u6570\u7ec4\u5927\u5c0f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Key get_const (size_t pos)"),"\n\u83b7\u53d6 Const \u5bf9\u8c61\u3002\u4e0d\u8981\u5237\u65b0\u4ee5\u7f13\u5b58\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void set_const (size_t pos, const Key &key)"),"\n\u8bbe\u7f6e Const \u5bf9\u8c61\uff0c\u8bf7\u52ff\u5237\u65b0\u4ee5\u7f13\u5b58\u3002")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u9759\u6001\u516c\u5171\u5c5e\u6027")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'static const std::string kType = "__array__"'))))),(0,r.kt)("h4",{id:"platondbmap-tablename-key-value--\u6a21\u677f\u7c7b"},"platon::db::Map< TableName, Key, Value > \u6a21\u677f\u7c7b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<Name::Raw TableName, typename Key, typename Value>\nclass platon::db::Map< TableName, Key, Value >\n")),(0,r.kt)("p",null,"\u5b9e\u73b0 map \u64cd\u4f5c\uff0cmap \u6a21\u677f\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6a21\u677f\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TableName:")," map \u7684\u540d\u79f0\uff0cmap \u7684\u540d\u79f0\u5728\u6bcf\u4e2a\u5408\u7ea6\u4e2d\u5e94\u8be5\u662f\u552f\u4e00\u7684\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Key\uff1a"),"\u952e\u7c7b\u578b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Value\uff1a"),"\u503c\u7c7b\u578b")))),(0,r.kt)("p",null,"MapType::Traverse \u9ed8\u8ba4\u503c\u4e3a Traverse\uff0c\u5f53 Traverse \u9700\u8981\u989d\u5916\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5f53\u4e0d\u9700\u8981\u904d\u5386\u64cd\u4f5c\u65f6\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a NoTraverse\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u516c\u5171\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Map ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Map(const Map< TableName, Key, Value > &)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Map(const Map< TableName, Key, Value > &&)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Map< TableName, Key, Value > & operator= (const Map< TableName, Key, Value > &)=delete"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"~Map ()"),"\n\u9500\u6bc1 Map \u5bf9\u8c61\u5c06\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"bool insert (const Key &k, const Value &v)"),"\n\u63d2\u5165\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u66f4\u65b0\u4e3a\u7f13\u5b58\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"bool insert_const (const Key &k, const Value &v)"),"\n\u63d2\u5165\u5c06\u4e0d\u4f1a\u66f4\u65b0\u5230\u7f13\u5b58\u7684\u65b0\u952e\u503c\u5bf9\u3002\u9002\u7528\u4e8e\u5927\u91cf\u63d2\u5165\uff0c\u63d2\u5165\u540e\u65e0\u9700\u66f4\u65b0\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Value get_const (const Key &k)"),"\n\u83b7\u53d6 Const \u5bf9\u8c61\uff0c\u5c06\u4e0d\u4f1a\u52a0\u5165\u7f13\u5b58\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Value & at (const Key &k)"),"\n\u83b7\u53d6\u503c\uff0c\u5c06\u88ab\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void erase (const Key &k)"),"\n\u5220\u9664\u952e\u503c\u5bf9\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Value & operator[] (const Key &k)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"boolcontains (const Key &key)"),"\n\u68c0\u67e5\u5bb9\u5668\u4e2d\u662f\u5426\u5b58\u5728\u5177\u6709\u4e0e key \u7b49\u6548\u7684\u952e\u7684\u5143\u7d20\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"void flush ()"),"\n\u5c06\u5185\u5b58\u4e2d\u7684\u4fee\u6539\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u9759\u6001\u516c\u5171\u5c5e\u6027")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'static const std::string kType = "__map__"')))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > platon::db::Map< TableName, Key, Value >::Map ()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > platon::db::Map< TableName, Key, Value >::Map (const Map< TableName, Key, Value > & )"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > platon::db::Map< TableName, Key, Value >::Map (const Map< TableName, Key, Value > && )"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > platon::db::Map< TableName, Key, Value >::~Map ()")))))),(0,r.kt)("p",null,"\u9500\u6bc1 Map \u5bf9\u8c61\u5c06\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > Value& platon::db::Map< TableName, Key, Value >::at ( const Key & k )"),"\n\xa0\xa0 \u83b7\u53d6\u503c\uff0c\u5c06\u88ab\u6dfb\u52a0\u5230\u7f13\u5b58\u4e2d\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u503c\u7684\u5f15\u7528")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nassert(map.at["hello"] == "world");\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > bool platon::db::Map< TableName, Key, Value >::contains ( const Key & key )"),"\n\xa0\xa0 \u68c0\u67e5\u5bb9\u5668\u4e2d\u662f\u5426\u5b58\u5728\u5177\u6709\u4e0e key \u7b49\u6548\u7684\u952e\u7684\u5143\u7d20\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u5143\u7d20\uff0c\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},' typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\n MapStr map;\n map.["hello"] = "world";\nassert(map.contains("hello"));\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > void platon::db::Map< TableName, Key, Value >::erase ( const Key & k )"),"\n\xa0\xa0 \u5220\u9664\u952e\u503c\u5bf9\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nmap.erase("hello");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > void platon::db::Map< TableName, Key, Value >::flush ()"),"\n\u5c06\u5185\u5b58\u4e2d\u7684\u4fee\u6539\u6570\u636e\u5237\u65b0\u5230\u533a\u5757\u94fe\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > Value platon::db::Map< TableName, Key, Value >::get_const ( const Key & k)"),"\n\u83b7\u53d6 Const \u5bf9\u8c61\uff0c\u5c06\u4e0d\u4f1a\u52a0\u5165\u7f13\u5b58\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ef7\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nassert(map.get_const["hello"] == "world");\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > bool platon::db::Map< TableName, Key, Value >::insert ( const Key & k, const Value & v)"),"\n\u63d2\u5165\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u66f4\u65b0\u4e3a\u7f13\u5b58\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"true \u63d2\u5165\u6210\u529f\uff0cfalse \u63d2\u5165\u5931\u8d25"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert("hello", "world");\nassert(map["hello"] == "world");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > bool platon::db::Map< TableName, Key, Value >::insert_const ( const Key & k, const Value & v)"),"\n\u63d2\u5165\u5c06\u4e0d\u4f1a\u66f4\u65b0\u5230\u7f13\u5b58\u7684\u65b0\u952e\u503c\u5bf9\u3002\u9002\u7528\u4e8e\u5927\u91cf\u63d2\u5165\uff0c\u63d2\u5165\u540e\u65e0\u9700\u66f4\u65b0\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"v\uff1a"),"\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"true \u63d2\u5165\u6210\u529f\uff0cfalse \u63d2\u5165\u5931\u8d25"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.insert_const("hello", "world");\nassert(map["hello"] == "world");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > Map<TableName, Key, Value>& platon::db::Map< TableName, Key, Value >::operator= ( const Map< TableName, Key, Value > & )"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename Key , typename Value > Value& platon::db::Map< TableName, Key, Value >::operator[] ( const Key & k)"),"\n\u62ec\u53f7\u8fd0\u7b97\u7b26\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"k\uff1a"),"\u952e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ef7\u503c\u4e0e\u83b7\u53d6\u4ef7\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'typedef platon::db::Map<"map_str"_n, std::string, std::string> MapStr;\nMapStr map;\nmap.["hello"] = "world";\n'))))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u53d8\u91cf")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'template<Name::Raw TableName, typename Key , typename Value > const std::string platon::db::Map< TableName, Key, Value >::kType = "__map__"'))))),(0,r.kt)("h4",{id:"templatenameraw-tablename-typename-t-typename-indices-class-platondbmultiindex-tablename-t-indices-"},"template<Name::Raw TableName, typename T, typename... Indices> class platon::db::MultiIndex< TableName, T, Indices >"),(0,r.kt)("p",null,"MultiIndex \u652f\u6301\u60df\u4e00\u7d22\u5f15\u548c\u666e\u901a\u7d22\u5f15\u3002\u60df\u4e00\u7d22\u5f15\u5e94\u8be5\u653e\u5728\u53c2\u6570\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002\u7ed3\u6784\u9700\u8981\u63d0\u4f9b\u4e0e index \u5b57\u6bb5\u5bf9\u5e94\u7684 get \u51fd\u6570\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u6210\u5458\u51fd\u6570\u529f\u80fd")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices>const_iterator platon::db::MultiIndex< TableName, T, Indices >::cbegin()"),"\n\u5f00\u59cb\u8fed\u4ee3\u5668"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u8fd4\u56de\u503c**\n  * const_iterator\n* **\u793a\u4f8b\uff1a**\n\n```cpp\n  struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nfor (auto it = member_table.cbegin(); it != it_end; ++it){}\n```\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> const_iterator platon::db::MultiIndex< TableName, T, Indices >::cend()"),"\n\u7ed3\u675f\u8fed\u4ee3\u5668"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u8fd4\u56de\u503c**\n  * const_iterator\n* **\u793a\u4f8b\uff1a**\n\n```cpp\n  struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nfor (auto it = member_table.cbegin(); it != it_end; ++it){}\n```\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName, typename KEY > size_t platon::db::MultiIndex< TableName, T, Indices >::count(const KEY &key)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u4e0e\u7d22\u5f15\u503c\u5bf9\u5e94\u7684\u6570\u636e\u7684\u6570\u91cf"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto count = member_table.count<"index2"_n>(uint8_t(10));\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<typename Lambda> std::pair<const_iterator, bool> platon::db::MultiIndex< TableName, T, Indices >::emplace(Lambda &constructor)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6570\u636e\u9879\u5904\u7406\u51fd\u6570"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u8be5\u8fed\u4ee3\u5668\u6307\u793a\u4f7f\u7528 bool \u7c7b\u578b\u7684\u63d2\u5165\u662f\u5426\u6210\u529f\u3002\u5982\u679c\u60df\u4e00\u7d22\u5f15\u51b2\u7a81\uff0c\u5219\u63d2\u5165\u5931\u8d25"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u793a\u4f8b\uff1a"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'struct Member {\n  std::string name;\n  uint8_t age;\n  uint8_t sex;\n  uint64_t $seq_;\n  std::string Name() const { return name; }\n  uint8_t Age() const { return age; }\n  PLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n  "table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                      IndexType::UniqueIndex>>,\n  IndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\n  member_table;\nmember_table.emplace([&](auto &m) {\n  m.age = 10;\n  m.name = "hello";\n  m.sex = 1;\n});\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> void platon::db::MultiIndex< TableName, T, Indices >::erase(const_iterator position)"),"\n\u57fa\u4e8e\u8fed\u4ee3\u5668\u5220\u9664\u6570\u636e"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u53c2\u6570**\n  * `position\uff1a`\u8fed\u4ee3\u5668\n* **\u793a\u4f8b\uff1a**\n\n```cpp\nstruct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\nIndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                  IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                    IndexType::NormalIndex>>>\nmember_table;\nauto vect_iter = member_table.find<"index2"_n>(uint8_t(10));\nmember_table.erase(vect_iter[0]);\n```\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName, typename KEY > const_iterator platon::db::MultiIndex< TableName, T, Indices >::find(const KEY & key)"),"\n\u627e\u5230\u6570\u636e\uff0c\u53ea\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7d22\u5f15\u662f\u53ef\u7528\u7684\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u53c2\u6570**\n  * `key\uff1a`\u7d22\u5f15\u503c\n* **\u8fd4\u56de\u503c**\n  * \u7ed3\u679c\u8fed\u4ee3\u5668\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u503c\u4e3acend()\u3002\n* **\u793a\u4f8b\uff1a**\n\n```cpp\nstruct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto vect_iter = member_table.find<"index2"_n>(uint8_t(10));\n```\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<Name::Raw IndexName>auto platon::db::MultiIndex< TableName, T, Indices >::get_index()"),"\n\u83b7\u53d6\u975e\u552f\u4e00\u7d22\u5f15\u7684\u7d22\u5f15\u5bf9\u8c61\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u8fd4\u56de\u503c**\n  * \u7d22\u5f15\u5bf9\u8c61\n* **\u793a\u4f8b\uff1a**\n\n```cpp\nstruct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nauto index = member_table.get_index<"index2"_n>();\n```\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"template<Name::Raw TableName, typename T , typename... Indices> template<typename Lambda >void platon::db::MultiIndex< TableName, T, Indices >::modify(const_iterator position,Lambda && constructor)"),"\n\u57fa\u4e8e\u8fed\u4ee3\u5668\u4fee\u6539\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u4fee\u6539\u6240\u6709\u4e0e\u7d22\u5f15\u76f8\u5173\u7684\u5b57\u6bb5\u3002"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'* **\u53c2\u6570**\n  * `position\uff1a`\u8fed\u4ee3\u5668\n  * `constructor\uff1a`\u66f4\u65b0\u76ee\u6807\u5bf9\u8c61\u7684lambda\u51fd\u6570\n* **\u793a\u4f8b\uff1a**\n\n```cpp\nstruct Member {\nstd::string name;\nuint8_t age;\nuint8_t sex;\nuint64_t $seq_;\nstd::string Name() const { return name; }\nuint8_t Age() const { return age; }\nPLATON_SERIALIZE(Member, (name)(age)(sex))\n};\nMultiIndex<\n"table"_n, Member,\n  IndexedBy<"index"_n, IndexMemberFun<Member, std::string, &Member::Name,\n                                    IndexType::UniqueIndex>>,\nIndexedBy<"index2"_n, IndexMemberFun<Member, uint8_t, &Member::Age,\n                                      IndexType::NormalIndex>>>\nmember_table;\nmember_table.modify(r.first, [&](auto &m) { m.sex = 15; });\n```\n')))))),(0,r.kt)("h3",{id:"\u5408\u7ea6-api"},"\u5408\u7ea6 API"),(0,r.kt)("h4",{id:"platon_destroy"},"platon_destroy()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool platon::platon_destroy (const Address & addr)\n")),(0,r.kt)("p",null,"\u9500\u6bc1\u5408\u7ea6\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u5408\u7ea6\u5730\u5740"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u9500\u6bc1\u6210\u529f\uff0c\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false")))),(0,r.kt)("h4",{id:"platon_migrate_contract"},"platon_migrate_contract()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename value_type , typename gas_type >\nbool platon::platon_migrate_contract ( Address & addr,\nconst bytes & init_args,\nvalue_type  value,\ngas_type  gas)\n")),(0,r.kt)("p",null,"\u8fc1\u79fb\u5408\u7ea6\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u65b0\u5408\u7ea6\u7684\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"init_args\uff1a"),"\u8f93\u5165\u53c2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u8d26\u91d1\u989d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u652f\u4ed8\u6b64\u4ea4\u6613\u7684 gas \u91d1\u989d"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u8fc1\u79fb\u6210\u529f\uff0c\u5219\u4e3a true\uff0c\u5426\u5219\u4e3a false")))),(0,r.kt)("h4",{id:"cross_call_args"},"cross_call_args()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename... Args>\nbytes platon::cross_call_args ( const std::string & method,\nconst Args &...  args)\n")),(0,r.kt)("p",null,"\u6784\u9020\u8de8\u5408\u7ea6\u8c03\u7528\u53c2\u6570\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u53c2\u6570\u5b57\u8282\u6570\u7ec4")))),(0,r.kt)("h4",{id:"platon_call-12"},"platon_call() 1/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename value_type , typename gas_type >\nbool platon::platon_call ( const Address & addr,\nconst bytes & paras,\nconst value_type & value,\nconst gas_type & gas)\n")),(0,r.kt)("p",null,"\u6b63\u5e38\u7684\u8de8\u5408\u7ea6\u8c03\u7528\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"paras\uff1a"),"\u4f7f\u7528\u51fd\u6570 cross_call_args \u6784\u9020\u7684\u5408\u7ea6\u53c2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684 gas"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u79fb\u5230\u5408\u7ea6\u7684\u91d1\u989d"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8c03\u7528\u6210\u529f\u6216\u5931\u8d25")))),(0,r.kt)("h4",{id:"platon_call-22"},"platon_call() 2/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename return_type , typename value_type , typename gas_type , typename... Args>\ndecltype(auto) platon::platon_call ( const Address & addr,\nconst value_type & value,\nconst gas_type & gas,\nconst std::string & method,\nconst Args &...  args\n)\n")),(0,r.kt)("p",null,"\u6b63\u5e38\u7684\u8de8\u5408\u7ea6\u8c03\u7528\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value\uff1a"),"\u8f6c\u79fb\u5230\u5408\u7ea6\u7684\u91d1\u989d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684 gas"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5408\u7ea6\u65b9\u6cd5","*"," ",(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),"\u503c\u4ee5\u53ca\u6267\u884c\u662f\u5426\u6210\u529f"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'auto result =\nplaton_call<int>(Address("0xEC081ab45BE978A4A630eB8cbcBffA50E747971B"),\nuint32_t(100), uint32_t(100), "add", 1,2,3);\nif(!result.secod){\n  platon_throw("cross call fail");\n}\n')))),(0,r.kt)("h4",{id:"platon_delegate_call-12"},"platon_delegate_call() 1/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename gas_type >\nbool platon::platon_delegate_call ( const Address & addr,\nconst bytes & paras,\nconst gas_type & gas\n)\n")),(0,r.kt)("p",null,"\u8de8\u5408\u7ea6\u4ee3\u7406\u8c03\u7528\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"paras\uff1a"),"\u4f7f\u7528\u51fd\u6570 cross_call_args \u6784\u9020\u7684\u5408\u7ea6\u53c2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684 gas"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8c03\u7528\u6210\u529f\u6216\u5931\u8d25")))),(0,r.kt)("h4",{id:"platon_delegate_call-22"},"platon_delegate_call() 2/2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename return_type , typename gas_type , typename... Args>\ndecltype(auto) platon::platon_delegate_call ( const Address & addr,\nconst gas_type & gas,\nconst std::string & method,\nconst Args &...  args)\n")),(0,r.kt)("p",null,"\u8de8\u5408\u7ea6\u4ee3\u7406\u8c03\u7528\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u53c2\u6570")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"addr\uff1a"),"\u8981\u8c03\u7528\u7684\u5408\u7ea6\u5730\u5740"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas\uff1a"),"\u5bf9\u5e94\u7684\u5408\u7ea6\u65b9\u6cd5\u4f30\u8ba1\u6d88\u8017\u7684 gas"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method\uff1a"),"\u88ab\u8c03\u7528\u5408\u7ea6\u7684\u65b9\u6cd5\u540d\u79f0"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u5bf9\u5e94\u4e8e\u5408\u7ea6\u65b9\u6cd5\u7684\u53c2\u6570"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u8fd4\u56de\u503c")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5408\u7ea6\u65b9\u6cd5","*"," ",(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de\u503c"),"\u503c\u4ee5\u53ca\u6267\u884c\u662f\u5426\u6210\u529f"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"\u793a\u4f8b\uff1a")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'auto result =\nplaton_delegate_call<int>(Address("0xEC081ab45BE978A4A630eB8cbcBffA50E747971B"),\n uint32_t(100), "add", 1,2,3);\n if(!result.secod){\n   platon_throw("cross call fail");\n }\n')))),(0,r.kt)("h4",{id:"get_call_output"},"get_call_output()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename T >\nvoid platon::get_call_output ( T & t)\n")),(0,r.kt)("p",null,"\u83b7\u53d6\u8de8\u5408\u7ea6\u8c03\u7528\u5408\u7ea6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u6a21\u677f\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T\uff1a"),"\u8f93\u51fa\u503c\u7c7b\u578b"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"t\uff1a"),"\u5408\u7ea6\u65b9\u6cd5\u8fd4\u56de\u7684\u503c")))),(0,r.kt)("h4",{id:"platon_event"},"platon_event"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_event(const uint8_t *topic, size_t topic_len, const uint8_t *args,\n                  size_t args_len);\n")),(0,r.kt)("p",null,"\u53d1\u5e03\u4e8b\u4ef6"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topic\uff1a"),"\u4e8b\u4ef6\u7684\u4e3b\u9898"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topic_len\uff1a"),"\u4e3b\u9898\u7684\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args\uff1a"),"\u53c2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"args_len\uff1a"),"\u53c2\u6570\u7684\u957f\u5ea6")))),(0,r.kt)("h3",{id:"\u5f02\u5e38-api"},"\u5f02\u5e38 API"),(0,r.kt)("h4",{id:"platon_panic"},"platon_panic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_panic(void);\n")),(0,r.kt)("p",null,"\u7ec8\u6b62\u4ea4\u6613\uff0c\u6263\u9664\u4ea4\u6613\u7684\u6240\u6709 gas"),(0,r.kt)("h4",{id:"platon_revert"},"platon_revert"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void platon_revert(void);\n")),(0,r.kt)("p",null,"\u7ec8\u6b62\u4ea4\u6613\u5e76\u6263\u9664\u6d88\u8017\u7684 gas"),(0,r.kt)("h3",{id:"\u5176\u4ed6-api"},"\u5176\u4ed6 API"),(0,r.kt)("h4",{id:"platon_sha3"},"platon_sha3()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"h256 platon::platon_sha3 ( const bytes & data )\n")),(0,r.kt)("p",null,"Sh3 \u7b97\u6cd5\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u53c2\u6570"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data\uff1a"),"\u4e8c\u8fdb\u5236\u6570\u636e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"\u8fd4\u56de"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6570\u636e\u54c8\u5e0c")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("h3",{id:"\u7f16\u8bd1\u76f8\u5173"},"\u7f16\u8bd1\u76f8\u5173"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"platon-cpp")," \u5982\u4f55\u7f16\u8bd1\u591a\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"cpp")," \u6587\u4ef6?"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"platon-cpp ./test.cpp ./test1.cpp\n")),(0,r.kt)("p",{parentName:"li"},"\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u5408\u7ea6\u7c7b\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"platon-cpp")," \u7f16\u8bd1\u5408\u7ea6, \u5982\u4f55\u6307\u5b9a wasm \u8f93\u51fa\u76ee\u5f55\u53ca\u6587\u4ef6\u540d?"),(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"-o")," \u53c2\u6570, \u4e14\u6307\u5b9a\u76ee\u5f55\u65f6\u5fc5\u987b\u540c\u65f6\u6307\u5b9a\u6587\u4ef6\u540d:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"platon-cpp ./test.cpp -o ./out/test.wasm\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"alaya-truffle \u6267\u884c truffle deploy \u90e8\u7f72\u5408\u7ea6\u5931\u8d25\uff1f"))),(0,r.kt)("p",null,"\u786e\u8ba4 truffle-config.js \u4e2d\u8fde\u63a5\u7684\u94fe\u7684\u914d\u7f6e\u4fe1\u606f\u53ca\u7528\u6237\u7684\u94b1\u5305\u5730\u5740\u662f\u5426\u6b63\u786e,\u94b1\u5305\u662f\u5426\u89e3\u9501\u3002"),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"truffle \u90e8\u7f72\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u5408\u7ea6\u5931\u8d25\uff1f"),(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u5408\u7ea6\u4e2d\u7684 init \u51fd\u6570\u5e26\u6709\u53c2\u6570\uff0c\u90e8\u7f72\u5408\u7ea6\u65f6\u9700\u8981\u6307\u5b9a params \u53c2\u6570\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"ABI \u652f\u6301\u54ea\u4e9b\u6570\u636e\u7c7b\u578b?"),(0,r.kt)("p",{parentName:"li"},"\u751f\u6210 ABI \u652f\u6301\u7684\u7c7b\u578b\u548c\u8f6c\u6362\u89c4\u5219\u5982\u4e0b\uff1a"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"ABI"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"bool")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint8_t"),(0,r.kt)("td",{parentName:"tr",align:null},"uint8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"uint16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"uint32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uint64_t"),(0,r.kt)("td",{parentName:"tr",align:null},"uint64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int8_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int16_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int32_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"int64_t"),(0,r.kt)("td",{parentName:"tr",align:null},"int64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null},"uint8","[","]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::string"),(0,r.kt)("td",{parentName:"tr",align:null},"string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::vector","<","T",">"),(0,r.kt)("td",{parentName:"tr",align:null},"T","[","]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::array","[","T, N","]"),(0,r.kt)("td",{parentName:"tr",align:null},"T","[","N","]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::pair","<","T, U",">"),(0,r.kt)("td",{parentName:"tr",align:null},"pair","<","T, U")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::set","<","T",">"),(0,r.kt)("td",{parentName:"tr",align:null},"set","<","T",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::map","<","T, V",">"),(0,r.kt)("td",{parentName:"tr",align:null},"map","<","T, V",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"std::list","<","T",">"),(0,r.kt)("td",{parentName:"tr",align:null},"list","<","T",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FixedHash","<","N",">"),(0,r.kt)("td",{parentName:"tr",align:null},"FixedHash","<","N",">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u128"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bigint"),(0,r.kt)("td",{parentName:"tr",align:null},"uint128")))),(0,r.kt)("h3",{id:"\u5408\u7ea6\u76f8\u5173"},"\u5408\u7ea6\u76f8\u5173"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5982\u4f55\u5b9e\u73b0\u5728 ",(0,r.kt)("inlineCode",{parentName:"li"},"platon")," \u8fdb\u7a0b\u8f93\u51fa\u5408\u7ea6 debug \u65e5\u5fd7\uff1f")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5408\u7ea6\u4ee3\u7801\u9996\u884c\u52a0\u4e0a ",(0,r.kt)("inlineCode",{parentName:"li"},"#undef NDEBUG"),", \u5fc5\u987b\u5728\u5934\u6587\u4ef6 include \u4e4b\u524d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"#undef NDEBUG\n\n#include <platon/platon.hpp>\n\n//...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Alaya")," \u542f\u52a8\u547d\u4ee4\u6307\u5b9a\u65e5\u5fd7\u7ea7\u522b 4, \u6253\u5f00 ",(0,r.kt)("inlineCode",{parentName:"li"},"debug")," \u6807\u5fd7")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./platon --debug --verbosity 4 ...\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5982\u4f55\u7f16\u5199\u5408\u7ea6\u80fd\u6709\u6548\u51cf\u5c11 Gas \u6d88\u8017\uff1f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u5f15\u7528\u53c2\u6570")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void test(const std::string& str) {\n    // ...\n}\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8fd4\u56de\u53f3\u503c\u5f15\u7528")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"std::vector<std::string>&& test() {\n    std::vector<std::string> v;\n    // ...\n    return std::move(v);\n}\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c3d\u91cf\u4e0d\u8981\u7533\u8bf7\u5927\u5757\u5185\u5b58"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageType")," \u6709\u54ea\u4e9b\u5730\u65b9\u8981\u6ce8\u610f\u7684\uff1f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5e94\u8be5\u5728 ",(0,r.kt)("inlineCode",{parentName:"li"},"init()")," \u521d\u59cb\u5316")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'CONTRAT Hello : public Contract {\npublic:\n    ACTION void init() {\n        s_.self() = "test";\n    }\nprivate:\n    StorageType<"test"_n, std::string> s_;\n};\n')),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageType")," \u7684\u7279\u5316\u7c7b\u578b"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Uint8"),(0,r.kt)("li",{parentName:"ul"},"Int8"),(0,r.kt)("li",{parentName:"ul"},"Uint16"),(0,r.kt)("li",{parentName:"ul"},"Int16"),(0,r.kt)("li",{parentName:"ul"},"Uint"),(0,r.kt)("li",{parentName:"ul"},"Int"),(0,r.kt)("li",{parentName:"ul"},"Uint64"),(0,r.kt)("li",{parentName:"ul"},"Int64"),(0,r.kt)("li",{parentName:"ul"},"String"),(0,r.kt)("li",{parentName:"ul"},"Vector"),(0,r.kt)("li",{parentName:"ul"},"Set"),(0,r.kt)("li",{parentName:"ul"},"Map"),(0,r.kt)("li",{parentName:"ul"},"Array"),(0,r.kt)("li",{parentName:"ul"},"Tuple"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"StorageType")," \u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Map"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Array")," \u6709\u4ec0\u4e48\u533a\u522b?"),(0,r.kt)("p",{parentName:"li"},"\u4ece\u5e95\u5c42\u5b58\u50a8\u5c42\u9762\u6765\u8bf4, ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageType")," \u7684\u5b9e\u73b0\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u5e8f\u5217\u5316, \u7136\u540e\u5b58\u50a8\u5230\u6570\u636e\n\u5e93. \u800c ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Map")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Array")," \u5219\u5c06\u5bb9\u5668\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5e8f\u5217\u5316\u540e, \u4f5c\u4e3a\nK/V \u5b58\u50a8\u5230\u6570\u636e\u5e93. \u5bf9\u4e8e\u5927\u89c4\u6a21\u6570\u636e, ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Map")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"platon::db::Array")," \u6027\u80fd\n\u66f4\u597d."),(0,r.kt)("p",{parentName:"li"},"\u5728\u5b9e\u73b0\u5408\u7ea6\u65f6, \u5e94\u6839\u636e\u6570\u636e\u89c4\u6a21, \u9009\u62e9\u5408\u9002\u7684\u5b58\u50a8\u7ed3\u6784.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"RLP \u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316 \u652f\u6301\u54ea\u4e9b C++ \u6807\u51c6\u5e93\u7c7b\u578b\uff1f"),(0,r.kt)("p",{parentName:"li"},"\u652f\u6301\u4ee5\u4e0b C++ \u6807\u51c6\u5e93\u7c7b\u578b:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"std::string"),(0,r.kt)("li",{parentName:"ul"},"std::vector"),(0,r.kt)("li",{parentName:"ul"},"std::map"),(0,r.kt)("li",{parentName:"ul"},"std::list"),(0,r.kt)("li",{parentName:"ul"},"std::array"),(0,r.kt)("li",{parentName:"ul"},"std::set"),(0,r.kt)("li",{parentName:"ul"},"std::pair"),(0,r.kt)("li",{parentName:"ul"},"std::tuple"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u81ea\u5b9a\u4e49\u7c7b\u578b\u5982\u4f55\u652f\u6301 RLP \u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316?"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u666e\u901a\u7c7b\u578b\u4f7f\u7528\u5b8f ",(0,r.kt)("inlineCode",{parentName:"li"},"PLATON_SERIALIZE"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Base {\n    int a;\n    std::string b;\n\n    PLATON_SERIALIZE(Base, (a)(b));\n};\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6d3e\u751f\u7c7b\u4f7f\u7528\u5b8f ",(0,r.kt)("inlineCode",{parentName:"li"},"PLATON_SERIALIZE_DERIVED"),", \u540c\u65f6\u57fa\u7c7b\u4e5f\u8981\u4f7f\u7528\u5b8f ",(0,r.kt)("inlineCode",{parentName:"li"},"PLATON_SERIALIZE"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"struct Derived : public Base {\n    int c;\n    int d;\n\n    PLATON_SERIALIZE_DERIVED(Derived, Base, (c)(d));\n};\n")))))}N.isMDXComponent=!0}}]);