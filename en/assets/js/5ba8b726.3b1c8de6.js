(self.webpackChunkalaya_docs=self.webpackChunkalaya_docs||[]).push([[6990],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return k}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(t),k=l,u=m["".concat(s,".").concat(k)]||m[k]||c[k]||r;return t?a.createElement(u,i(i({ref:n},d),{},{components:t})):a.createElement(u,i({ref:n},d))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2235:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var a=t(2122),l=t(9756),r=(t(7294),t(3905)),i={id:"Json_Rpc",title:"JSON RPC API",sidebar_label:"JSON RPC"},o=void 0,s={unversionedId:"Json_Rpc",id:"Json_Rpc",isDocsHomePage:!1,title:"JSON RPC API",description:"JSON is a lightweight data-interchange format. It can represent numbers, strings, ordered sequences of values, and collections of name/value pairs.",source:"@site/docs/JsonRpc.md",sourceDirName:".",slug:"/Json_Rpc",permalink:"/alaya-devdocs/en/Json_Rpc",editUrl:"https://github.com/AlayaNetwork/alaya-devdocs/tree/main/website/docs/JsonRpc.md",version:"current",frontMatter:{id:"Json_Rpc",title:"JSON RPC API",sidebar_label:"JSON RPC"},sidebar:"docs",previous:{title:"Python SDK",permalink:"/alaya-devdocs/en/Python_SDK"},next:{title:"Explorer API",permalink:"/alaya-devdocs/en/Explorer_API"}},p=[{value:"JavaScript API",id:"javascript-api",children:[]},{value:"Note",id:"note",children:[]},{value:"JSON RPC API Reference",id:"json-rpc-api-reference",children:[]}],d={toc:p};function c(e){var n=e.components,t=(0,l.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://json.org/"},"JSON")," is a lightweight data-interchange format. It can represent numbers, strings, ordered sequences of values, and collections of name/value pairs."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://www.jsonrpc.org/specification"},"JSON-RPC")," is a stateless, light-weight remote procedure call (RPC) protocol. Primarily this specification defines several data structures and the rules around their processing. It is transport agnostic in that the concepts can be used within the same process, over sockets, over HTTP, or in many various message passing environments. It uses JSON (",(0,r.kt)("a",{parentName:"p",href:"http://www.ietf.org/rfc/rfc4627.txt"},"RFC 4627"),") as data format."),(0,r.kt)("h2",{id:"javascript-api"},"JavaScript API"),(0,r.kt)("p",null,"To talk to an platon node from inside a JavaScript application use the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/PlatONnetwork/client-sdk-js"},"web3.js")," library, which gives an convenient interface for the RPC methods."),(0,r.kt)("h2",{id:"note"},"Note"),(0,r.kt)("p",null,"The following just shows the RPC call process with curl procedure. Actually you need to make some adjustments according to the specific situation of your server. For example, a possible call procedure for PlatON is ",(0,r.kt)("inlineCode",{parentName:"p"},'curl -X POST -H \'content-type: application/json\' --data \'{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}\' 127.0.0.1:6789'),"."),(0,r.kt)("h2",{id:"json-rpc-api-reference"},"JSON RPC API Reference"),(0,r.kt)("h4",{id:"web3_clientversion"},"web3_clientVersion"),(0,r.kt)("p",null,"Returns the current client version."),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - The current client version."),(0,r.kt)("h5",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}\'\n\n// Result\n{\n  "id":67,\n  "jsonrpc":"2.0",\n  "result": "Mist/v0.9.3/darwin/go1.4.1"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"web3_sha3"},"web3_sha3"),(0,r.kt)("p",null,"Returns Keccak-256 (",(0,r.kt)("em",{parentName:"p"},"not")," the standardized SHA3-256) of the given data."),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"String")," - the data to convert into a SHA3 hash.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n  '0x68656c6c6f20776f726c64'\n]\n")),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA")," - The SHA3 result of the given string."),(0,r.kt)("h5",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"web3_sha3","params":["0x68656c6c6f20776f726c64"],"id":64}\'\n\n// Result\n{\n  "id":64,\n  "jsonrpc": "2.0",\n  "result": "0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"net_version"},"net_version"),(0,r.kt)("p",null,"Returns the current network protocol version."),(0,r.kt)("h5",{id:"parameters-2"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - The current network protocol version."),(0,r.kt)("h5",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"net_version","params":[],"id":67}\'\n\n// Result\n{\n  "id":67,\n  "jsonrpc": "2.0",\n  "result": "59"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"net_listening"},"net_listening"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if client is actively listening for network connections."),(0,r.kt)("h5",{id:"parameters-3"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," when listening, otherwise ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h5",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"net_listening","params":[],"id":67}\'\n\n// Result\n{\n  "id":67,\n  "jsonrpc":"2.0",\n  "result":true\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"net_peercount"},"net_peerCount"),(0,r.kt)("p",null,"Returns number of peers currenly connected to the client."),(0,r.kt)("h5",{id:"parameters-4"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the number of connected peers."),(0,r.kt)("h5",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":74}\'\n\n// Result\n{\n  "id":74,\n  "jsonrpc": "2.0",\n  "result": "0x2" // 2\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_protocolversion"},"platon_protocolVersion"),(0,r.kt)("p",null,"Returns the current platon protocol version."),(0,r.kt)("h5",{id:"parameters-5"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - The current platon protocol version."),(0,r.kt)("h5",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_protocolVersion","params":[],"id":67}\'\n\n// Result\n{\n  "id":67,\n  "jsonrpc": "2.0",\n  "result": "54"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_syncing"},"platon_syncing"),(0,r.kt)("p",null,"Returns an object with data about the sync status or FALSE."),(0,r.kt)("h5",{id:"parameters-6"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object|Boolean"),", An object with sync status data or ",(0,r.kt)("inlineCode",{parentName:"p"},"FALSE"),", when not syncing:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"startingBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The block at which the import started (will only be reset, after the sync reached his head)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"currentBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The current block, same as platon_blockNumber."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"highestBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The estimated highest block.")),(0,r.kt)("h5",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_syncing","params":[],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": {\n    startingBlock: \'0x384\',\n    currentBlock: \'0x386\',\n    highestBlock: \'0x454\'\n  }\n}\n// Or when not syncing\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": false\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gasprice"},"platon_gasPrice"),(0,r.kt)("p",null,"Returns the current price per gas in von."),(0,r.kt)("h5",{id:"parameters-7"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the current gas price in von."),(0,r.kt)("h5",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_gasPrice","params":[],"id":73}\'\n\n// Result\n{\n  "id":73,\n  "jsonrpc": "2.0",\n  "result": "0x09184e72a000" // 10000000000000\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_accounts"},"platon_accounts"),(0,r.kt)("p",null,"Returns a list of addresses owned client."),(0,r.kt)("h5",{id:"parameters-8"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array of DATA"),", string - address string in bech32 format owned by the client."),(0,r.kt)("h5",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST -H \'Content-Type: application/json\' --data \'{"jsonrpc":"2.0","method":"platon_accounts","params":[],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": ["atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym"]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_blocknumber"},"platon_blockNumber"),(0,r.kt)("p",null,"Returns the number of most recent block."),(0,r.kt)("h5",{id:"parameters-9"},"Parameters"),(0,r.kt)("p",null,"none"),(0,r.kt)("h5",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the current block number the client is on."),(0,r.kt)("h5",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_blockNumber","params":[],"id":83}\'\n\n// Result\n{\n  "id":83,\n  "jsonrpc": "2.0",\n  "result": "0x4b7" // 1207\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getbalance"},"platon_getBalance"),(0,r.kt)("p",null,"Returns the balance of the account of given address."),(0,r.kt)("h5",{id:"parameters-10"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format to check for balance."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   'atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym',\n   'latest'\n]\n")),(0,r.kt)("h5",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the current balance in von."),(0,r.kt)("h5",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getBalance","params":["atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym", "latest"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x0234c8a3397aab58" // 158972490234375000\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getstorageat"},"platon_getStorageAt"),(0,r.kt)("p",null,"Returns the value from a storage position at a given address."),(0,r.kt)("h5",{id:"parameters-11"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format of the storage."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the position in the storage."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   'atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym',\n   '0x0', // storage position at 0\n   '0x2' // state at block number 2\n]\n")),(0,r.kt)("h5",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA")," - the value at this storage position."),(0,r.kt)("h5",{id:"example-11"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getStorageAt","params":["atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym", "0x0", "0x2"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x03"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gettransactioncount"},"platon_getTransactionCount"),(0,r.kt)("p",null,"Returns the number of transactions ",(0,r.kt)("em",{parentName:"p"},"sent")," from an address."),(0,r.kt)("h5",{id:"parameters-12"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   'atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym',\n   'latest' // state at the latest block\n]\n")),(0,r.kt)("h5",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the number of transactions send from this address."),(0,r.kt)("h5",{id:"example-12"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getTransactionCount","params":["atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym","latest"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x1" // 1\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getblocktransactioncountbyhash"},"platon_getBlockTransactionCountByHash"),(0,r.kt)("p",null,"Returns the number of transactions in a block from a block matching the given block hash."),(0,r.kt)("h5",{id:"parameters-13"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of a block.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238'\n]\n")),(0,r.kt)("h5",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the number of transactions in this block."),(0,r.kt)("h5",{id:"example-13"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getBlockTransactionCountByHash","params":["0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0xb" // 11\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getblocktransactioncountbynumber"},"platon_getBlockTransactionCountByNumber"),(0,r.kt)("p",null,"Returns the number of transactions in a block from a block matching the given block number."),(0,r.kt)("h5",{id:"parameters-14"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer of a block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0xe8', // 232\n]\n")),(0,r.kt)("h5",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - integer of the number of transactions in this block."),(0,r.kt)("h5",{id:"example-14"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getBlockTransactionCountByNumber","params":["0xe8"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0xa" // 10\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getcode"},"platon_getCode"),(0,r.kt)("p",null,"Returns code at a given address."),(0,r.kt)("h5",{id:"parameters-15"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format ."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   'atx14984xa8uuhkmer32s6tuz5e3valxa0ctxj9j67',\n   '0x2'  // 2\n]\n")),(0,r.kt)("h5",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA")," - the code from the given address."),(0,r.kt)("h5",{id:"example-15"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getCode","params":["atx14984xa8uuhkmer32s6tuz5e3valxa0ctxj9j67", "0x2"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_sign"},"platon_sign"),(0,r.kt)("p",null,"Signs data with a given address."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note")," the address to sign must be unlocked."),(0,r.kt)("h5",{id:"parameters-16"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format ."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", Data to sign.")),(0,r.kt)("h5",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA"),": Signed data."),(0,r.kt)("h5",{id:"example-16"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_sign","params":["atx16xk7yhxd842s5l44x2k8t89v00sfcfcewjsd7z", "Schoolbus"],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x2ac19db245478a06032e69cdbd2b54e648b78431d0a47bd1fbab18f79f820ba407466e37adbe9e84541cab97ab7d290f4a64a5825c876d22109f3bf813254e8601"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_sendtransaction"},"platon_sendTransaction"),(0,r.kt)("p",null,"Creates new message call transaction or a contract creation, if the data field contains code."),(0,r.kt)("h5",{id:"parameters-17"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction object.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format of the transaction is send from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format - (optional when creating new contract) The address the transaction is directed to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional, default: 90000) Integer of the gas provided for the transaction execution. It will return unused gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional, default: To-Be-Determined) Integer of the gasPrice used for each paid gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional) Integer of the value send with this transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),"  - (optional) The compiled code of a contract."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional) Integer of a nonce. This allows to overwrite your own pending transactions that use the same nonce.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [{\n  "from": "atx1kc8gm4sut5etaqzchw8tjuy8purjxv24gqvjj9",\n  "to": "atx163hgm4nut5etaqzchw8tjuy8purjg3t8zcn722",\n  "gas": "0x76c0", // 30400,\n  "gasPrice": "0x9184e72a000", // 10000000000000\n  "value": "0x9184e72a", // 2441406250\n  "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n}]\n')),(0,r.kt)("h5",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA"),", 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available."),(0,r.kt)("p",null,"Use platon_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract."),(0,r.kt)("h5",{id:"example-17"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_sendTransaction","params":[{see above}],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_sendrawtransaction"},"platon_sendRawTransaction"),(0,r.kt)("p",null,"Creates new message call transaction or a contract creation for signed transactions."),(0,r.kt)("h5",{id:"parameters-18"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction object.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", The signed transaction data.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [{\n  "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n}]\n')),(0,r.kt)("h5",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA"),", 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available."),(0,r.kt)("p",null,"Use platon_getTransactionReceipt to get the contract address, after the transaction was mined, when you created a contract."),(0,r.kt)("h5",{id:"example-18"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_sendRawTransaction","params":[{see above}],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_call"},"platon_call"),(0,r.kt)("p",null,"Executes a new message call immediately without creating a transaction on the block chain."),(0,r.kt)("h5",{id:"parameters-19"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction call object")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format - (optional) The address the transaction is send from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format - The address the transaction is directed to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional) Integer of the gas provided for the transaction execution. platon_call consumes zero gas, but this parameter may be needed by some executions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional) Integer of the gasPrice used for each paid gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),"  - (optional) Integer of the value send with this transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),"  - (optional) The compiled code of a contract.")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),".")),(0,r.kt)("h5",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DATA")," - the return value of executed contract."),(0,r.kt)("h5",{id:"example-19"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_call","params":[{see above}],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x0"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_estimategas"},"platon_estimateGas"),(0,r.kt)("p",null,"Makes a call or transaction, which won't be added to the blockchain and returns the used gas, which can be used for estimating the used gas."),(0,r.kt)("h5",{id:"parameters-20"},"Parameters"),(0,r.kt)("p",null,"See platon_call parameters, expect that all properties are optional."),(0,r.kt)("h5",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - the amount of gas used."),(0,r.kt)("h5",{id:"example-20"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_estimateGas","params":[{see above}],"id":1}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x5208" // 21000\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getblockbyhash"},"platon_getBlockByHash"),(0,r.kt)("p",null,"Returns information about a block by hash."),(0,r.kt)("h5",{id:"parameters-21"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - Hash of a block."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Boolean")," - If ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," it returns the full transaction objects, if ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," only the hashes of the transactions.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\n   true\n]\n")),(0,r.kt)("h5",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A block object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no block was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"number"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the block number. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parentHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the parent block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 8 Bytes - hash of the generated proof-of-work. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sha3Uncles"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - SHA3 of the uncles data in the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logsBloom"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 256 Bytes - the bloom filter for the logs of the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionsRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the transaction trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stateRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the final state trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"receiptsRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the receipts trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"miner"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format - the address of the beneficiary to whom the mining rewards were given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"difficulty"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the difficulty for this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"totalDifficulty"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the total difficulty of the chain until this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"extraData"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),' - the "extra data" field of this block.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer the size of this block in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasLimit"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the maximum gas allowed in this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasUsed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the total used gas by all transactions in this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timestamp"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the unix timestamp for when the block was collated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactions"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uncles"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of uncle hashes.")),(0,r.kt)("h5",{id:"example-21"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getBlockByHash","params":["0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331", true],"id":1}\'\n\n// Result\n{\n"id":1,\n"jsonrpc":"2.0",\n"result": {\n    "number": "0x1b4", // 436\n    "hash": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331",\n    "parentHash": "0x9646252be9520f6e71339a8df9c55e4d7619deeb018d2a3f2d21fc165dde5eb5",\n    "nonce": "0xe04d296d2460cfb8472af2c5fd05b5a214109c25688d3704aed5484f9a7792f2",\n    "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",\n    "logsBloom": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331",\n    "transactionsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n    "stateRoot": "0xd5855eb08b3387c0af375e9cdb6acfc05eb8f519e419b874b6ff2ffda7ed1dff",\n    "miner": "atx1fejlmgs4j432f9he7dfzlzgj9gcgsjt6yqy0ja",\n    "difficulty": "0x027f07", // 163591\n    "totalDifficulty":  "0x027f07", // 163591\n    "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",\n    "size":  "0x027f07", // 163591\n    "gasLimit": "0x9f759", // 653145\n    "minGasPrice": "0x9f759", // 653145\n    "gasUsed": "0x9f759", // 653145\n    "timestamp": "0x54e34e8e" // 1424182926\n    "transactions": [{...},{ ... }] \n    "uncles": ["0x1606e5...", "0xd5145a9..."]\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getblockbynumber"},"platon_getBlockByNumber"),(0,r.kt)("p",null,"Returns information about a block by block number."),(0,r.kt)("h5",{id:"parameters-22"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer of a block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Boolean")," - If ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," it returns the full transaction objects, if ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," only the hashes of the transactions.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0x1b4', // 436\n   true\n]\n")),(0,r.kt)("h5",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,"See platon_getBlockByHash"),(0,r.kt)("h5",{id:"example-22"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getBlockByNumber","params":["0x1b4", true],"id":1}\'\n')),(0,r.kt)("p",null,"Result see platon_getBlockByHash."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gettransactionbyhash"},"platon_getTransactionByHash"),(0,r.kt)("p",null,"Returns the information about a transaction requested by transaction hash."),(0,r.kt)("h5",{id:"parameters-23"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of a transaction.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [\n   "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"\n]\n')),(0,r.kt)("h5",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A transaction object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no transaction was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the number of transactions made by the sender prior to this one."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - block number where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transactions index position in the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format of the sender."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format of the receiver. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's a contract creation transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - value transferred in von."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - gas price provided by the sender in von."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - gas provided by the sender."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"input"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the data send along with the transaction.")),(0,r.kt)("h5",{id:"example-23"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getTransactionByHash","params":["0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"],"id":1}\'\n\n// Result\n{\n"id":1,\n"jsonrpc":"2.0",\n"result": {\n    "hash":"0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b",\n    "nonce":"0x",\n    "blockHash": "0xbeab0aa2411b7ab17f30a99d3cb9c6ef2fc5426d6ad6fd9e2a26a6aed1d1055b",\n    "blockNumber": "0x15df", // 5599\n    "transactionIndex":  "0x1", // 1\n    "from":"atx1gp7h8k9ynm4ct5ev73j4qlwhr4g8zqxp0rc7ym",\n    "to":"atx163hgm4nut5etaqzchw8tjuy8purjg3t8zcn722",\n    "value":"0x7f110" // 520464\n    "gas": "0x7f110" // 520464\n    "gasPrice":"0x09184e72a000",\n    "input":"0x603880600c6000396000f300603880600c6000396000f3603880600c6000396000f360",\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gettransactionbyblockhashandindex"},"platon_getTransactionByBlockHashAndIndex"),(0,r.kt)("p",null,"Returns information about a transaction by block hash and transaction index position."),(0,r.kt)("h5",{id:"parameters-24"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of a block."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transaction index position.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\n   '0x0' // 0\n]\n")),(0,r.kt)("h5",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,"See platon_getBlockByHash."),(0,r.kt)("h5",{id:"example-24"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getTransactionByBlockHashAndIndex","params":["0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b", "0x0"],"id":1}\'\n')),(0,r.kt)("p",null,"Result see platon_getTransactionByHash."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gettransactionbyblocknumberandindex"},"platon_getTransactionByBlockNumberAndIndex"),(0,r.kt)("p",null,"Returns information about a transaction by block number and transaction index position."),(0,r.kt)("h5",{id:"parameters-25"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - a block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the transaction index position.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0x29c', // 668\n   '0x0' // 0\n]\n")),(0,r.kt)("h5",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,"See platon_getBlockByHash."),(0,r.kt)("h5",{id:"example-25"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getTransactionByBlockNumberAndIndex","params":["0x29c", "0x0"],"id":1}\'\n')),(0,r.kt)("p",null,"Result see platon_getTransactionByHash."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_gettransactionreceipt"},"platon_getTransactionReceipt"),(0,r.kt)("p",null,"Returns the receipt of a transaction by transaction hash."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note")," That the receipt is not available for pending transactions."),(0,r.kt)("h5",{id:"parameters-26"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of a transaction.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"params: [\n   '0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238'\n]\n")),(0,r.kt)("h5",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A transaction receipt object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no receipt was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionHash "),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transactions index position in the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this transaction was in."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - block number where this transaction was in."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cumulativeGasUsed "),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY ")," - The total amount of gas used when this transaction was executed in the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasUsed "),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY ")," - The amount of gas used by this specific transaction alone."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contractAddress "),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", string - address string in bech32 format - The contract address created, if the transaction was a contract creation, otherwise ",(0,r.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logs"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of log objects, which this transaction generated.")),(0,r.kt)("h5",{id:"example-26"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getTransactionReceipt","params":["0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"],"id":1}\'\n\n// Result\n{\n"id":1,\n"jsonrpc":"2.0",\n"result": {\n     transactionHash: \'0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\',\n     transactionIndex:  \'0x1\', // 1\n     blockNumber: \'0xb\', // 11\n     blockHash: \'0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\',\n     cumulativeGasUsed: \'0x33bc\', // 13244\n     gasUsed: \'0x4dc\', // 1244\n     contractAddress: \'atx1kc8gm4sut5etaqzchw8tjuy8purjxv24gqvjj9\' // or null, if none was created\n     logs: [{\n         // logs as returned by getFilterLogs, etc.\n     }, ...]\n  }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_newfilter"},"platon_newFilter"),(0,r.kt)("p",null,"Creates a filter object, based on filter options, to notify when the state changes (logs).\nTo check if the state has changed, call platon_getFilterChanges."),(0,r.kt)("h5",{id:"parameters-27"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The filter options:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fromBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - (optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),") Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - (optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),") Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA|Array"),", string - address string in bech32 format  - (optional) Contract address or a list of addresses from which logs should originate."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topics"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA"),",  - (optional) Array of 32 Bytes ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),' topics. Each topic can also be an array of DATA with "or" options.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [{\n  "fromBlock": "0x1",\n  "toBlock": "0x2",\n  "address": "atx13zy0ruv447se9nlwscrfskzvqv85e8d3ga9ph9",\n  "topics": ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b", null, [0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b, 0x000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc]]\n}]\n')),(0,r.kt)("h5",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - A filter id."),(0,r.kt)("h5",{id:"example-27"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_newFilter","params":[{"topics":["0x12341234"]}],"id":73}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": "0x1" // 1\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_newblockfilter"},"platon_newBlockFilter"),(0,r.kt)("p",null,"Creates a filter in the node, to notify when a new block arrives.\nTo check if the state has changed, call platon_getFilterChanges."),(0,r.kt)("h5",{id:"parameters-28"},"Parameters"),(0,r.kt)("p",null,"None"),(0,r.kt)("h5",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - A filter id."),(0,r.kt)("h5",{id:"example-28"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_newBlockFilter","params":[],"id":73}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc":  "2.0",\n  "result": "0x1" // 1\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_newpendingtransactionfilter"},"platon_newPendingTransactionFilter"),(0,r.kt)("p",null,"Creates a filter in the node, to notify when new pending transactions arrive.\nTo check if the state has changed, call platon_getFilterChanges."),(0,r.kt)("h5",{id:"parameters-29"},"Parameters"),(0,r.kt)("p",null,"None"),(0,r.kt)("h5",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," - A filter id."),(0,r.kt)("h5",{id:"example-29"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_newPendingTransactionFilter","params":[],"id":73}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc":  "2.0",\n  "result": "0x1" // 1\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_uninstallfilter"},"platon_uninstallFilter"),(0,r.kt)("p",null,"Uninstalls a filter with given id. Should always be called when watch is no longer needed.\nAdditonally Filters timeout when they aren't requested with platon_getFilterChanges for a period of time."),(0,r.kt)("h5",{id:"parameters-30"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The filter id.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [\n  "0xb" // 11\n]\n')),(0,r.kt)("h5",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," - ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the filter was successfully uninstalled, otherwise ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h5",{id:"example-30"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_uninstallFilter","params":["0xb"],"id":73}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc": "2.0",\n  "result": true\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getfilterchanges"},"platon_getFilterChanges"),(0,r.kt)("p",null,"Polling method for a filter, which returns an array of logs which occurred since last poll."),(0,r.kt)("h5",{id:"parameters-31"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the filter id.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [\n  "0x16" // 22\n]\n')),(0,r.kt)("h5",{id:"returns-31"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array")," - Array of log objects, or an empty array if nothing has changed since last poll."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For filters created with ",(0,r.kt)("inlineCode",{parentName:"p"},"platon_newBlockFilter")," the return are block hashes (",(0,r.kt)("inlineCode",{parentName:"p"},"DATA"),", 32 Bytes), e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'["0x3454645634534..."]'),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For filters created with ",(0,r.kt)("inlineCode",{parentName:"p"},"platon_newPendingTransactionFilter ")," the return are transaction hashes (",(0,r.kt)("inlineCode",{parentName:"p"},"DATA"),", 32 Bytes), e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'["0x6345343454645..."]'),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For filters created with ",(0,r.kt)("inlineCode",{parentName:"p"},"platon_newFilter")," logs are objects with following params:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TAG")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"pending")," when the log is pending. ",(0,r.kt)("inlineCode",{parentName:"li"},"mined")," if log is already mined."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the log index position in the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transactions index position log was created from. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transactions this log was created from. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this log was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the block number where this log was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when it's pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", address string in bech32 format - address from which this log originated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - contains one or more 32 Bytes non-indexed arguments of the log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topics"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA")," - Array of 0 to 4 32 Bytes ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," of indexed log arguments. (In ",(0,r.kt)("em",{parentName:"li"},"solidity"),": The first topic is the ",(0,r.kt)("em",{parentName:"li"},"hash")," of the signature of the event (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"Deposit(address,bytes32,uint256)"),"), except you declared the event with the ",(0,r.kt)("inlineCode",{parentName:"li"},"anonymous")," specifier.).")))),(0,r.kt)("h5",{id:"example-31"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getFilterChanges","params":["0x16"],"id":73}\'\n\n// Result\n{\n  "id":1,\n  "jsonrpc":"2.0",\n  "result": [{\n    "logIndex": "0x1", // 1\n    "blockNumber":"0x1b4" // 436\n    "blockHash": "0x8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcfdf829c5a142f1fccd7d",\n    "transactionHash":  "0xdf829c5a142f1fccd7d8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcf",\n    "transactionIndex": "0x0", // 0\n    "address": "atx1zmzhskk9vtl5rckulhuzn3dpgtclentagu2ddd",\n    "data":"0x0000000000000000000000000000000000000000000000000000000000000000",\n    "topics": ["0x59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5"]\n    },{\n      ...\n    }]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getfilterlogs"},"platon_getFilterLogs"),(0,r.kt)("p",null,"Returns an array of all logs matching filter with given id."),(0,r.kt)("h5",{id:"parameters-32"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The filter id.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [\n  "0x16" // 22\n]\n')),(0,r.kt)("h5",{id:"returns-32"},"Returns"),(0,r.kt)("p",null,"See platon_getFilterChanges."),(0,r.kt)("h5",{id:"example-32"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getFilterLogs","params":["0x16"],"id":74}\'\n')),(0,r.kt)("p",null,"Result see platon_getFilterChanges."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_getlogs"},"platon_getLogs"),(0,r.kt)("p",null,"Returns an array of all logs matching a given filter object."),(0,r.kt)("h5",{id:"parameters-33"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - the filter object, see platon_newFilter parameters.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'params: [{\n  "topics": ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]\n}]\n')),(0,r.kt)("h5",{id:"returns-33"},"Returns"),(0,r.kt)("p",null,"See platon_getFilterChanges."),(0,r.kt)("h5",{id:"example-33"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_getLogs","params":[{"topics":["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]}],"id":74}\'\n')),(0,r.kt)("p",null,"Result see platon_getFilterChanges."),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"platon_evidences"},"platon_evidences"),(0,r.kt)("p",null,"Return double sign report data."),(0,r.kt)("h5",{id:"parameters-34"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-34"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - The evidence string contains three types of evidence: duplicatePrepare, duplicateVote, duplicateViewchange. Each type contains multiple pieces of evidence, so it is an array structure. Please pay attention when parsing."),(0,r.kt)("h5",{id:"example-34"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\nCurl -X POST --data \'{"jsonrpc":"2.0","method":"platon_evidences","params":[],"id":74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": "evidences data..."\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_addpeer"},"admin_addPeer"),(0,r.kt)("p",null,"Add a node."),(0,r.kt)("h5",{id:"parameters-35"},"Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"String")," - peer node string details.")),(0,r.kt)("h5",{id:"returns-35"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," - Added success or failure (note: returning true does not necessarily add success)."),(0,r.kt)("h5",{id:"example-35"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{ "jsonrpc": "2.0", "method": "admin_addPeer", "params": [ "enode: //acb2281452fb9fc25d40113fb6afe82b498361de0ee4ce69f55c180bb2afce2c5a00f97bfbe0270fadba174264cdf6da76ba334a6380c0005a84e8a6449c2502@127.0.0.1: 14789"], "id": 74 }\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": true\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_nodeinfo"},"admin_nodeInfo"),(0,r.kt)("p",null,"Returns the current client node details."),(0,r.kt)("h5",{id:"parameters-36"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-36"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - current node details."),(0,r.kt)("h5",{id:"example-36"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\nCurl -X POST --data \'{"jsonrpc":"2.0","method":"admin_nodeInfo","params":[],"id":74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": {node information }\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_peers"},"admin_peers"),(0,r.kt)("p",null,"Returns the details of the peer connected to the current client."),(0,r.kt)("h5",{id:"parameters-37"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-37"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array")," - array, connected peer node details."),(0,r.kt)("h5",{id:"example-37"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\nCurl -X POST --data \'{"jsonrpc":"2.0","method":"admin_peers","params":[],"id":74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"Result": [{Node 1 information} ,  {Node 2 information}, ..., {node information N}]\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_getprogramversion"},"admin_getProgramVersion"),(0,r.kt)("p",null,"Query code version and signature."),(0,r.kt)("h5",{id:"parameters-38"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-38"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - contains two fields, Version and Sign."),(0,r.kt)("h5",{id:"example-38"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\nCurl -X POST --data \'{"jsonrpc":"2.0","method":"admin_getProgramVersion","params":[],"id":74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": {\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"Version": 1794,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0"Sign": "0xa5eb0a935f63006b8f3a2f4dcb007a2bf50c6eb4755f3c27ff3b3af63078da2f5f1eed9beafd1e2dd8f4e588a8eafa60337b7f95aba5a0167fa600115542763a00"\n\xa0\xa0\xa0\xa0}\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_getschnorrnizkprove"},"admin_getSchnorrNIZKProve"),(0,r.kt)("p",null,"Get proof of bls."),(0,r.kt)("h5",{id:"parameters-39"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-39"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - proof of bls."),(0,r.kt)("h5",{id:"example-39"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{ "jsonrpc": "2.0", "method": "admin_getSchnorrNIZKProve", "params": [], "id": 74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": "02705b94701eec4f4619d42796f3241a93035b8b8df3f098ae21f428339ed90599e77f4c90944854b70cbca341cb22480c8872da3b0ae4f6fda29df7293df93d"\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h4",{id:"admin_datadir"},"admin_datadir"),(0,r.kt)("p",null,"Get the data directory."),(0,r.kt)("h5",{id:"parameters-40"},"Parameters"),(0,r.kt)("p",null,"no"),(0,r.kt)("h5",{id:"returns-40"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," - data directory."),(0,r.kt)("h5",{id:"example-40"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Request\ncurl -X POST --data \'{ "jsonrpc": "2.0", "method": "admin_datadir", "params": [], "id": 74}\'\n\n// Result\n{\n\xa0\xa0"id": 74,\n\xa0\xa0"jsonrpc": "2.0",\n\xa0\xa0"result": "/home/platon/network/data"\n}\n')),(0,r.kt)("hr",null))}c.isMDXComponent=!0}}]);